using System.IO;

namespace ServerTools
{
    class HowToSetup
    {
        private const string file = "HowToSetup.xml";
        private static string filePath = string.Format("{0}/{1}", API.ConfigPath, file);

        public static void Load()
        {
            using (StreamWriter sw = new StreamWriter(filePath))
            {
                sw.WriteLine("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                sw.WriteLine("ServerTools - How to setup ServerTools");
                sw.WriteLine("This was drafted for version 9.6");
                sw.WriteLine();
                sw.WriteLine("ServerTools was coded and tested under a Windows operating system. It should operate on other major O.S. but if you find bugs, report them to");
                sw.WriteLine("https://github.com/dmustanger/7dtd-ServerTools/issues");
                sw.WriteLine();
                sw.WriteLine("This version is compatible with 7 Days to Die: Alpha 16.");
                sw.WriteLine();
                sw.WriteLine("Open the ServerToolsConfig.xml found in the same directory as this file. You will need to enable and set each tools options to match your server preferences.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_Chat_Commands\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Adminstrators can use chat to send administrators a ingame chat message. Type @admins (message) to use. Only online administrators will receive the message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_List\" Enable=\"False\" Admin_Level=\"0\" Moderator_Level=\"1\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Mod_Level");
                sw.WriteLine();
                sw.WriteLine("Type /admins or !admins in chat to get a response showing the currently online administrators and moderators based on the ServerAdmin.xml. Setting Admin_Level to 2 would show all online administrators");
                sw.WriteLine("tier 0-2 as admin in the chat response. Setting Mod_Level to 6 would show all online moderators tier 3 through 6 as mods in the chat response.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_Name_Coloring\" Enable=\"True\" Admin_Level=\"0\" Admin_Prefix=\"(ADMIN)\" Admin_Color=\"[FF0000]\" Moderator_Level=\"1\" Moderator_Prefix=\"(MOD)\" Moderator_Color=\"[008000]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a value of your choice in paranthesis for Admin_Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Admin_Color");
                sw.WriteLine("Set a numeric value for Moderator_Level");
                sw.WriteLine("Set a value of your choice in paranthesis for Moderator_Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Moderator_Color");
                sw.WriteLine();
                sw.WriteLine("Administrators that are the correct tier level will have their chat show with a prefex and color when using in game chat based on the ServerAdmin.xml");
                sw.WriteLine("Moderators that are the correct tier level will have their chat show with a prefex and color when using in game chat based on the ServerAdmin.xml");
                sw.WriteLine("Setting Admin_Level to 2 and Moderator_Level to 6 would show tier 0-2 as Administrators and tier 3-6 as Moderators.");
                sw.WriteLine("Leaving the prefix blank will still show the color but no prefix before their name.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Animal_Tracking\" Enable =\"False\" Always_Show_Response =\"False\" Delay_Between_Uses =\"60\" Minimum_Spawn_Radius =\"20\" Maximum_Spawn_Radius =\"30\" Entity_Id =\"59, 60, 61\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Always_Show_Response");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Minimum_Spawn_Radius");
                sw.WriteLine("Set a numeric value for Maximum_Spawn_Radius");
                sw.WriteLine("Set a numeric values for EntityId");
                sw.WriteLine();
                sw.WriteLine("Type /animaltracking, /track, !animaltracking or !track in chat to get a animal to spawn with in the radius set.");
                sw.WriteLine("Set any animals in the config to the list of Id so they can potentially spawn. Separate entries with a comma.");
                sw.WriteLine("Entity Id can be found in game by typing spawnentity in the console. This will respond with a list of entity and their corresponding Id.");
                sw.WriteLine("The delay is the time that must pass before the command can be used again. The delay is in minutes.");
                sw.WriteLine("Players will receive an in game message saying they have tracked down an animal to with in the radius it spawned at.");
                sw.WriteLine("Recommend experimenting with radius to find one that suits your preference.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Announce_Invalid_Item_Stack\" Enable =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically checks players inventory for invalid stack sizes. The player will receive a message telling them they have an invalid stack and a log will be made to the output_log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auction\" Enable =\"False\" Delay_Between_Uses =\"24\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Players can sell one item stack at a time by putting it into a secure chest they own and typing /auction sell #. The number is how much the price is.");
                sw.WriteLine("Typing /auction shows available items in the auction. /auction buy # will attempt to purchase the corresponding item # from the auction.");
                sw.WriteLine("Profits are sent to the sellers wallet.");
                sw.WriteLine("A player can cancel their auction by typing /auction cancel.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait to sell a new item after selling one through the auction. Delay is in hours.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Save_World\" Enable =\"False\" Delay_Between_World_Saves =\"15\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically begins a save of the world every time the Delay_Between_World_Saves expires.");
                sw.WriteLine("This save process will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Shutdown\" Enable =\"False\" Countdown_Timer =\"5\" Delay_Before_Shutdown =\"60\" Days_Until_Horde =\"7\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Countdown_Timer");
                sw.WriteLine("Set a numeric value for Delay_Before_Shutdown");
                sw.WriteLine("Set a numeric value for Days_Until_Horde");
                sw.WriteLine();
                sw.WriteLine("Automatically begins the shutdown process for the server after the Delay_Before_Shutdown time runs out.");
                sw.WriteLine("Begins a warning of the coming shutdown with a timer based on the Countdown_Timer after the Delay_Before_Shutdown time has run out.");
                sw.WriteLine("Saves the world at one minute remaining of the count down and gives the players a warning not to exchange items or build during the final minute.");                
                sw.WriteLine("If the server is set as a service on the host hardware, it will automatically restart. ServerTools can not automatically restart a server.");
                sw.WriteLine("Days_Until_Horde controls how many days before a horde night. Some mods change this from the default 7 days. This prevent shutdown during a bloodmoon.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bad_Word_Filter\" Enable =\"False\" Invalid_Name =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Invalid_Name");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a BadWords.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Filters out bad words or symbols from chat matching the list in BadWords.xml");
                sw.WriteLine("Enabling Invalid_Name will change all names containing bad words to \"Invalid Name-No Commands\"");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bag\" Enable =\"False\" Delay_Between_Uses=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Players can type /bag after dying to receive the items from their bag into their inventory. If full it falls to the ground.");
                sw.WriteLine("There can not be more than one bag in the area of where they died.");
                sw.WriteLine("Items with parts such as guns will have the parts return as one quality.");
                sw.WriteLine("Delay_Between_Uses controls how often they can use the command. Delay is in minutes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bike\" Enable =\"False\" Delay_Between_Uses =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Players can type /bike while inside their own claim space and riding their bike to set that bike for teleport.");
                sw.WriteLine("When not riding the bike, typing /bike will try to find the set bike within 50 blocks of the player and return it to them.");
                sw.WriteLine("Delay_Between_Uses controls how often they can use the command. Delay is in minutes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bloodmoon\" Enable =\"False\" Show_On_Spawn =\"False\" Show_On_Respawn =\"False\" Auto_Show_Bloodmoon_Delay =\"30\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Spawn");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine("Set a numeric value for Auto_Show_Bloodmoon_Delay");
                sw.WriteLine();
                sw.WriteLine("Displays the amount of days before the next bloodmoon in chat.");
                sw.WriteLine("Typing /bloodmoon in chat will respond with the remaining days until the next bloodmoon.");
                sw.WriteLine("Setting Show_On_Spawn will display the remaining days to a player that has just logged into the server.");
                sw.WriteLine("Setting Show_On_Respawn will display the remaining days to a player that has just died, teleported, traveled, or triggered any respawn of their character.");
                sw.WriteLine("Auto_Show_Bloodmoon_Delay controls the minutes that will pass before the bloodmoon message shows automatically in chat for all players.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bounties\" Enable =\"False\" Bounty =\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Bounty");
                sw.WriteLine();
                sw.WriteLine("Players can see the online players and their id by using /bounty. It also shows the current bounty on each player and the cost to add more.");
                sw.WriteLine("The cost of the bounty is based on the player level multiplied by the Bounty setting.");
                sw.WriteLine("Players are awarded the bounty value upon killing the target and a chat message is shown.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Response\" Color=\"[00FF00]\" Chat_Command_Private=\"/\" Chat_Command_Public=\"!\"  Mute=\"false\" />");
                sw.WriteLine();
                sw.WriteLine("Set a color using a html value in brackets for Color");
                sw.WriteLine("Set a symbol ServerTools will use for private chat based commands");
                sw.WriteLine("Set a symbol ServerTools will use for public chat based commands");
                sw.WriteLine("Set True or False for Mute");
                sw.WriteLine();
                sw.WriteLine("The color that all chat command responses will respond with and general ServerTools based messages. Always enabled.");
                sw.WriteLine("The Chat_Command_Private is the symbol that players will use to initiate a private chat command such as /gimme");
                sw.WriteLine("The Chat_Command_Public is the symbol that players will use to initiate a public chat command such as !gimme");
                sw.WriteLine("Turn on mute so you can mute players from chat.");
                sw.WriteLine("If you mute a player via chat commands, they are muted for 60 minutes. Players sent via console can be adjusted to suit your needs.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Flood_Protection\" Enable =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Protect the chat from being flooded from a player's chat spam.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Logger\" Enable =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs all chat to a external file.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Clan_Manager\" Enable =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the clan manager. Players can control it via chat.");
                sw.WriteLine("Commands available are: /clancommands, /clanadd, /clandel, /claninvite, /clanaccept, /clandecline, /clanremove, /clanpromote, /clandemote, /clan, if it starts with /c.");
                sw.WriteLine("Players can create and manage a clan with these various commands.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Credentials\" Enable=\"False\" No_Family_Share=\"False\" Bad_Id=\"False\" No_Internal=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for No_Family_Share");
                sw.WriteLine("Set True or False for Bad_Id");
                sw.WriteLine("Set True or False for No_Internal");
                sw.WriteLine();
                sw.WriteLine("No family share will stop players from joining your server if their id do not match between steamId and ownerId. Many hackers use this to prevent their main accounts");
                sw.WriteLine("from being banned.");
                sw.WriteLine("Bad_Id checks for steam Id and owner Id to be 17 numbers in length and to start with 7656119 as all steam id are like this.");
                sw.WriteLine("No_Internal checks for an ip that is an internal address such as 192.168.1.* . This is commonly done to prevent their own ip from getting banned but it will kick");
                sw.WriteLine("an administrator or server owner if they were playing on a server they host locally.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Custom_Commands\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Custom_Commands.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Allows custom commands to be used via chat. Example: The player can type /market and it runs \"tele {SteamId} 0 -1 5\" based on the response the admin has setup.");
                sw.WriteLine("Delays are available for the first ten entries in the list only.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Day7\" Enable=\"False\" Days_Until_Horde=\"7\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Days_Until_Horde");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /day and /day7. Using these will respond with the days left until a horde night as well as the current server FPS, count of mobs, animals,");
                sw.WriteLine("minibikes, and supply crates spawned in the world.");
                sw.WriteLine("If your server uses a horde schedule that is not every 7 days, put the custom value under days until horde.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Death_Spot\" Enable=\"False\" Delay=\"7\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("After a player dies, they have two minutes to type /died and be brought back to their death position.");
                sw.WriteLine("Delay_Between_Uses controls the time a player must wait before being able to use the command again.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Donator_Name_Coloring\" Enable=\"False\" Donator_Level1=\"100\" Donator_Level2=\"101\" Donator_Level3=\"102\" Donator_Prefix1=\"(DON)\" Donator_Prefix2=\"(DON)\" Donator_Prefix3=\"(DON)\" Donator_Color1=\"[009000]\" Donator_Color2=\"[FF66CC]\" Donator_Color3=\"[E9C918]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Donator_Level1");
                sw.WriteLine("Set a numeric value for Donator_Level2");
                sw.WriteLine("Set a numeric value for Donator_Level3");
                sw.WriteLine("Set a value of your choice in paranthesis for Donator_Prefix1");
                sw.WriteLine("Set a value of your choice in paranthesis for Donator_Prefix2");
                sw.WriteLine("Set a value of your choice in paranthesis for Donator_Prefix3");
                sw.WriteLine("Set a color using a html value in brackets for Donator_Color1");
                sw.WriteLine("Set a color using a html value in brackets for Donator_Color2");
                sw.WriteLine("Set a color using a html value in brackets for Donator_Color3");
                sw.WriteLine();
                sw.WriteLine("Players listed on the ReservedSlots.xml with a valid expiration time remaining will have their chat color alter and a prefix added to match what is listed in the config when they have turned it on.");
                sw.WriteLine("Do not use the same levels for each donator. You can set them all as one color if you wish to or three unique ones.");
                sw.WriteLine("Do not use levels that match those used by admins or moderators.");
                sw.WriteLine("Players can type /doncolor in chat to enable their color and prefix settings. If they continue to use /doncolor, it will rotate through the levels and then off.");
                sw.WriteLine("If a player's expiry time has passed, they will no longer show with a color or prefix in chat. Using /doncolor at this point will alert them to their time expiring and when.");
                sw.WriteLine("Leaving the prefix blank will still show the color but no prefix before their name.");
                sw.WriteLine("While enabled, the player will show in your ServerAdmin.xml. Do not be alarmed. For this reason, make sure you do not set them to the same levels as Admins or Mods. The default is typically best at 100, 101, and 102");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Entity_Cleanup\" Items=\"False\" Blocks=\"False\" Falling_Tree=\"False\" Entity_Underground=\"False\" Bikes=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Items");
                sw.WriteLine("Set True or False for Blocks");
                sw.WriteLine("Set True or False for Falling_Tree");
                sw.WriteLine("Set True or False for Entity_Underground");
                sw.WriteLine("Set True or False for Bikes");
                sw.WriteLine();
                sw.WriteLine("If any of these are active, they are triggered every 30 seconds.");
                sw.WriteLine("Items will automatically clean up too many items found in a pile in a area.");
                sw.WriteLine("Blocks will automatically clean up too many falling blocks in a area.");
                sw.WriteLine("Falling_Tree will automatically clean up a falling tree that gets stuck at 0 health and does not disappear.");
                sw.WriteLine("Entity_Underground will automatically send entities to the surface except falling blocks are removed.");
                sw.WriteLine("Bikes will automatically remove a bike if found in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"First_Claim_Block\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /claim to receive a claim block but only once.");
                sw.WriteLine("This is used to help prevent claim block grief with noobs especially on PVP servers.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Flight_Check\" Enable=\"False\" Admin_Level=\"0\" Max_Ping=\"300\" Max_Height=\"2\" Kill_Player=\"False\" Announce=\"False\" Jail_Enabled=\"False\" Kick_Enabled=\"False\" Ban_Enabled=\"False\" Days_Before_Log_Delete=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Max_Ping");
                sw.WriteLine("Set a numeric value for Max_Height");
                sw.WriteLine("Set True or False for Kill_Player");
                sw.WriteLine("Set True or False for Announce");
                sw.WriteLine("Set True or False for Jail_Enabled");
                sw.WriteLine("Set True or False for Kick_Enabled");
                sw.WriteLine("Set True or False for Ban_Enabled");
                sw.WriteLine("Set a numeric value for Days_Before_Log_Delete");
                sw.WriteLine();
                sw.WriteLine("Autodetects a player flying in the air. Does not detect them underground. If they are not moving, it will not detect them flying. This is to prevent false positives.");
                sw.WriteLine("Detections are written to a log file for admin review.");
                sw.WriteLine("The admin level is the tier a player is ignored by the detection.");
                sw.WriteLine("Max_Ping is the ping a player must hit before the detector ignores them. This is to prevent false positives during lag spikes from the player or server.");
                sw.WriteLine("Max_Height controls how far off the ground a player can be before detected. Find the best setting for your server between lag and riding minibikes down hills or slopes.");
                sw.WriteLine("The detector knows if a player is falling and will skip them.");
                sw.WriteLine("Multiple penalties are available by setting true for the appropriate punishment. All punishments can be enabled for a K.O. punch.");
                sw.WriteLine("Log files will auto delete themselves after a set amount of days. Days_Before_Log_Delete controls the amount of days.");
                sw.WriteLine("*Note* This tool is based around Coppi's mod player flight check and modified for ServerTools and automation.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"FPS\" Enable=\"False\" Set_Target=\"30\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /fps to show the fps read out from /day7 command.");
                sw.WriteLine("Set_Target controls the fps target the server will be set to on load up.");
                sw.WriteLine("Set_Target reportedly helps with blocks collapsing.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Friend_Teleport\" Enable=\"false\" Delay_Between_Uses=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Friends can type /friend to see a list of their current online friends and their Id #.");
                sw.WriteLine("/friend # will send a request to teleport to the friend with that Id.");
                sw.WriteLine("The other player will receive the request and can type /accept to accept the request.");
                sw.WriteLine("A request will only last for 30 seconds before a player must make a new request.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Gimme\" Enable=\"False\" Delay_Between_Uses=\"1\" Always_Show_Response=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set True or False for Always_Show_Response");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Gimme.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Players can type /gimme to initiate a free item from the gimme list.");
                sw.WriteLine("The gimme.xml contains a list of all the items a player can receive from using /gimme.");
                sw.WriteLine("A delay can be set with Delay_Between_Uses so players must wait that period of time before using /gimme again.");
                sw.WriteLine("Setting Always_Show_Response to true will force all gimme uses to respond publicly regardless of the player using the private or public chat command trigger.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hatch_Elevator_Detector\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Auto detects a player that has used hatches as an elevator to reach the surface or top of their tower faster.");
                sw.WriteLine("Players caught using this are stunned and their leg is broken.");
                sw.WriteLine("A message will also show for the player telling them they are stunned and broke a leg while smashing through hatches.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"High_Ping_Kicker\" Enable=\"False\" Max_Ping=\"250\" Samples_Needed=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Ping");
                sw.WriteLine("Set a numeric value for Samples_Needed");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a HighPingImmunity.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Players who have too high of a ping will be kicked from the server automatically.");
                sw.WriteLine("Max_Ping is the limit a player can ping at before being flagged for kick.");
                sw.WriteLine("Samples_Needed control the amount of times in a row a player must fail the ping check before the auto kick initiates.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hordes\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically starts a horde every 20 minutes if player count is over 5 and zombie count is less than 30.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Info_Ticker\" Enable=\"False\" Delay_Between_Messages=\"2\" Random=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Messages");
                sw.WriteLine("Set True or False for Random");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InfoTicker.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Each entry in InfoTicker.xml is a message that will disply in game.");
                sw.WriteLine("Delay_Between_Messages controls the time before the next message is displayed.");
                sw.WriteLine("Setting Random to true will show the messages in a random order until all have been displayed. The list will repeat again but in a new random order.");
                sw.WriteLine("Leaving Random to false will display each message in order of the list until all have been displayed. The list will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Item_Kicker\" Enable=\"False\" Ban=\"False\" Level_To_Ignore=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Ban");
                sw.WriteLine("Set a numeric value for Level_To_Ignore");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InvalidItems.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Each entry in InvalidItems.xml is checked against each players inventory.");
                sw.WriteLine("If any items in a player's inventory match the invalid items list, a message will show in the server alerting everyone. The player is also kicked.");
                sw.WriteLine("If Ban is set to true it will ban the player instead of kicking them for their illegal items.");
                sw.WriteLine("Setting a Level_To_Ignore will ignore all admins and mods based on the ServerAdmin.xml level they are set to.");
                sw.WriteLine("Setting Level_To_Ignore to 5 will ignore all admins and mods level 0-5.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Jail_Commands\" Enable=\"False\" Jail_Size=\"4\" Jail_Position=\" - 14, 106, -2\" Jail_Shock=\"false\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Jail_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Jail_Position");
                sw.WriteLine("Set True or False for Jail_Shock");
                sw.WriteLine();
                sw.WriteLine("Enables the jail system for naughty players. This muct be enabled to utilize other tools that send a player to jail.");
                sw.WriteLine("Jail_Size controls how far a player can stray from the jail before it teleports them back to the Jail_Position.");
                sw.WriteLine("Jail_Position controls where a jailed player is sent to. This is the x, y, z position.");
                sw.WriteLine("Jail shock will apply the shock buff to them if they try to leave the prison area.");
                sw.WriteLine("If you send a player to jail via chat commands, are sent to jail for 60 minutes. Players sent via console can be adjusted to suit your needs.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kick_Vote\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to kick a player from the game.");
                sw.WriteLine("Can only start a vote if 10 or more players and 8 must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kill_Notice\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("If a player kills another player, a chat notice will show it and the item used to kill them.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lobby\" Enable=\"False\" Return=\"False\" Delay_Between_Uses=\"5\" Lobby_Size=\"25\" Lobby_Position=\"- 14, 106, -2\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Lobby_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Lobby_Position");
                sw.WriteLine();
                sw.WriteLine("Typing /lobby will send a player to the lobby if the position is set.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using /lobby again.");
                sw.WriteLine("If return is enabled, players are alert upon using /lobby that they can type /lobby return to be sent back to the location they came from.");
                sw.WriteLine("They must be within range of the lobby position based on the Lobby_Size");
                sw.WriteLine("Lobby_Position controls where they will be teleport to when using /lobby.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Location\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /loc to show their x, y, z coordinates in chat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Login_Notice\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a file named LoginNotice.xml.");
                sw.WriteLine("Add players steam id under the id and whatever message of your choice for message.");
                sw.WriteLine("If the player matching the listed id enters the game, the message will be displayed to all players.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lottery\" Enable =\"False\" Bonus =\"25\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Bonus");
                sw.WriteLine();
                sw.WriteLine("Players can start a new lottery by typing /lotto #. They can check the current lotto with /lotto.");
                sw.WriteLine("To enter a lotto, players must match what the first player opened the lotto value as.");
                sw.WriteLine("When an hour has passed or ten players have entered the lotto, it will draw the winner.");
                sw.WriteLine("If the lotto is full, the winner also gets the Bonus.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Motd\" Enable=\"False\" Show_On_Respawn=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Motd.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Message of the day or Motd entries will show to the player upon joining the server.");
                sw.WriteLine("Each entry in the Motd.xml will show as a separate message in game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Mute_Vote\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to mute a player in game from chat for 60 minutes.");
                sw.WriteLine("Can only start a vote if 10 or more players and 8 must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Spawn_Tele\" Enable=\"False\" New_Spawn_Tele_Position=\" - 1, 99, -18\" Return=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for New_Spawn_Tele_Position");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine();
                sw.WriteLine("Teleports a new player upon joining to the New_Spawn_Tele_Position.");
                sw.WriteLine("Set New_Spawn_Tele_Position to control where a new player will spawn to.");
                sw.WriteLine("New_Spawn_Tele_Position is an x, y, z position.");
                sw.WriteLine("Enabling return will alert players upon teleport that they can type /ready to go back to their first spawn point.");
                sw.WriteLine("Players must be with 50 blocks of the new tele spawn to use /ready.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Night_Alert\" Enable=\"False\" Delay=\"120\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically show the hours left until night time.");
                sw.WriteLine("Use Delay to control how often it shows.");
                sw.WriteLine("Does not display during night time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Normal_Player_Name_Coloring\" Enable=\"False\" Normal_Player_Prefix=\"(NOOB)\" Normal_Player_Color=\"[00B3B3]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value of your choice in paranthesis for Normal_Player_Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Normal_Player_Color");
                sw.WriteLine();
                sw.WriteLine("Enabling makes all standard players chat message show with a prefix and color.");
                sw.WriteLine("Normal_Player_Prefix controls the prefix for the message.");
                sw.WriteLine("Normal_Player_Color controls the color of the chat message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Logs\" Enable=\"False\" Interval=\"60\" Position=\"False\" Inventory=\"False\" Extra=\"False\" Days_Before_Log_Deleted=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Interval");
                sw.WriteLine("Set True or False for Position");
                sw.WriteLine("Set True or False for Inventory");
                sw.WriteLine("Set True or False for Extra");
                sw.WriteLine("Set a numeric value for Days_Before_Log_Deleted");
                sw.WriteLine();
                sw.WriteLine("Starts a log that will keep track of any enabled options.");
                sw.WriteLine("Setting the Interval will control how often these checks and logs and written to the file.");
                sw.WriteLine("Position controls whether the current player position, is logged.");
                sw.WriteLine("Inventory controls whether the current player inventory, is logged.");
                sw.WriteLine("Extra controls whether the current player is dead, is logged.");
                sw.WriteLine("Log files will auto delete themselves after a set amount of days. Days_Before_Log_Delete controls the amount of days.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Stat_Check\" Enable=\"False\" Admin_Level=\"0\" Kick_Enabled=\"False\" Ban_Enabled=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set True or False for Kick_Enabled");
                sw.WriteLine("Set True or False for Ban_Enabled");
                sw.WriteLine();
                sw.WriteLine("Automatically checks if a player has an illegal value for their level, player height, run speed, available skill points, max health, max stamina or max jump height.");
                sw.WriteLine("Detected players who fail any of the checks will have a log created.");
                sw.WriteLine("Setting Kick_Enabled to true will kick the detected player.");
                sw.WriteLine("Setting Ban_Enabled to true will ban the detected player.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Real_World_Time\" Enable=\"False\" Delay=\"60\" Time_Zone=\"UTC\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine("Set a string value for Time_Zone");
                sw.WriteLine();
                sw.WriteLine("Enabling will show the real world time periodically based on the delay.");
                sw.WriteLine("Recommend changing the Time_Zone to match the time zone of the server host location.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Report\" Enable=\"False\" Delay_Between_Uses=\"60\" Admin_Level=\"0\" Days_Before_Log_Delete=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Days_Before_Log_Delete");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow a player to type /report and their message.");
                sw.WriteLine("The message will be logged in a file called Report.xml under the Reports folder.");
                sw.WriteLine("Admins online at the time of sending, will be sent the message as well.");
                sw.WriteLine("Delay_Between_Uses controls how often a report can be made by a player in minutes.");
                sw.WriteLine("Admin_Level is the level an admin or mod must be to receive the message. Setting 4 would make 0-4 receive it.");
                sw.WriteLine("Log files will auto delete themselves after a set amount of days. Days_Before_Log_Delete controls the amount of days.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Reserved_Slots\" Enable=\"False\" Reserved_Check=\"False\"  Session_Time=\"30\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Reserved_Check");
                sw.WriteLine("Set a numeric value for Session_Time");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ReservedSlots.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Turns on an automatic reservation system. When the server is full, it will kick 1 player that is not listed in the ReservedSlots.xml");
                sw.WriteLine("The auto kick chooses based on the player's overall play session time.");
                sw.WriteLine("If a player is not reserved but also has not played longer than the Session_Time, they will not be kicked.");
                sw.WriteLine("Admins lower or equal to tier Admin_Level are immune to the kick system.");
                sw.WriteLine("Setting Reserved_Check to true enables the chat command /reserved which will respond with the players reservation expiration time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Restart_Vote\" Enable=\"False\" Restart_Delay=\"30\" Minimum_Players=\"10\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Restart_Delay");
                sw.WriteLine("Set a numeric value for Minimum_Players");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Allows players to vote for a server restart. Initiates stopserver 1 if successful.");
                sw.WriteLine("Restart_Delay is the time between votes to restart. Time is in minutes.");
                sw.WriteLine("Minimum players is the amount of players that must be online to begin a new vote.");
                sw.WriteLine("If an admin of tier Admin_Level is online during a call to vote, they will be alerted and no vote will begin.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Set_Home\" Enable=\"False\" Set_Home2_Enabled=\"False\" Set_Home2_Donor_Only=\"False\" Delay_Between_Home_Uses=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Set_Home2_Enabled");
                sw.WriteLine("Set True or False for Set_Home2_Donor_Only");
                sw.WriteLine("Set a numeric value for Delay_Between_Home_Uses");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat command /sethome, /home, and /delhome.");
                sw.WriteLine("/sethome will save the player's current location.");
                sw.WriteLine("/home will teleport the player to their saved home location.");
                sw.WriteLine("/delhome will delete the saved home postion.");
                sw.WriteLine("Delay_Between_Home_Uses controls the delay before a player can use /home or /home2. This is set in minutes.");
                sw.WriteLine("Set_Home2_Enabled enables a second home position controlled through chat commands /sethome2, /home2, /delhome2.");
                sw.WriteLine("/sethome2 will save the player's current location.");
                sw.WriteLine("/home2 will teleport the player to their saved home location.");
                sw.WriteLine("/delhome2 will delete the saved home postion.");
                sw.WriteLine("If Set_Home2_Donor_Only is enabled, only donors on the ReservedSlots.xml with a valid expiration can use /sethome2, /home2, and /delhome2.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("< Tool Name =\"Shop\" Enable=\"False\" Shop_Anywhere=\"False\" Coin_Name=\"Coins\" Zombie_Kill_Value=\"10\" Player_Kill_Value=\"50\" Death_Penalty_Value=\"-25\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Shop_Anywhere");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat command /shop while inside or outside a trader space based on Shop_Anywhere.");
                sw.WriteLine("/buy # is used to purchase the corresponding item # from the shop list.");
                sw.WriteLine("Admins can customize the Shop.xml however they prefer with any items or blocks from the game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Special_Player_Name_Coloring\" Enable=\"False\" Special_Player_Steam_Id=\"76561191234567891, 76561191987654321\" Special_Player_Prefix=\"(SPECIAL)\" Special_Player_Color=\"[ADAD85]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a steam Id value of your choice separated by commas for Special_Player_Steam_Id");
                sw.WriteLine("Set a value of your choice in paranthesis for Special_Player_Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Special_Player_Color");
                sw.WriteLine();
                sw.WriteLine("Players who have steam id listed under Special_Player_SteamId will have a prefix and color applied to their chat messages.");
                sw.WriteLine("Separate the special steam id by commas.");
                sw.WriteLine("Leaving the prefix blank will still show the color but no prefix before their name.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Starting_Items\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a StartingItems.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("All items listed in StartingItems.xml will be given to a new player when they first join the server.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Stopserver\" Ten_Second_Countdown=\"True\" Kick_30_Seconds=\"False\" Kick_Login=\"False\" Kick_Message=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Ten_Second_Countdown");
                sw.WriteLine("Set True or False for Kick_30_Seconds");
                sw.WriteLine("Set True or False for Kick_Login");
                sw.WriteLine();
                sw.WriteLine("If console command shutdown is used and Ten_Second_Countdown is enabled the timer will give a warning at ten seconds remaining and a 5 second countdown timer displaying 5, 4, 3, 2, 1 at each remaining second.");
                sw.WriteLine("This will also show during the auto shutdown process.");
                sw.WriteLine("Kick_Login will kick players out during the countdown period and tell them the remaining time before shutdown.");
                sw.WriteLine("The kick message can be controlled in the phrases.xml.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Suicide\" Enable=\"False\" Delay_Between_Uses=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /killme, /suicide, /wrist and /hang so players can kill themselves.");
                sw.WriteLine("Set the Delay_Between_Uses to control how long a player must wait before suicide will work for them again.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Travel\" Enable=\"False\" Delay_Between_Uses=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a TravelLocations.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("All locations listed in the TravelLocations.xml will allow a player to type /travel while inside one and teleport to the corresponding destination.");
                sw.WriteLine("Inside the TravelLocations.xml, destination is where the player will teleport to.");
                sw.WriteLine("The name will be the name of the travel zone, Corner1 is first corner of the zone, Corner2 is the opposite corner of the zone.");
                sw.WriteLine("Corner1, corner2 and destination are represented by x, y, z coordinates.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Underground_Check\" Enable=\"False\" Admin_Level=\"0\" Max_Ping=\"300\" Kill_enabled=\"False\" Announce=\"False\" Jail_Enabled=\"False\" Kick_Enabled=\"False\" Ban_Enabled=\"False\" Days_Before_Log_Deleted=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Max_Ping");
                sw.WriteLine("Set True or False for Kill_Player");
                sw.WriteLine("Set True or False for Announce");
                sw.WriteLine("Set True or False for Jail_Enabled");
                sw.WriteLine("Set True or False for Kick_Enabled");
                sw.WriteLine("Set True or False for Ban_Enabled");
                sw.WriteLine("Set a numeric value for Days_Before_Log_Deleted");
                sw.WriteLine();
                sw.WriteLine("Automatically checks for players using flight or no clip underground.");
                sw.WriteLine("Detections are written to a log file for admin review.");
                sw.WriteLine("The admin level is the tier a player is ignored by the detection.");
                sw.WriteLine("MaxPing is the ping a player must hit before the detector ignores them. This is to prevent false positives during lag spikes from the player or server.");
                sw.WriteLine("Multiple penalties are available by setting true for the appropriate punishment. All punishments can be enabled for a K.O. punch.");
                sw.WriteLine("Log files will auto delete themselves after a set amount of days. Days_Before_Log_Delete controls the amount of days.");
                sw.WriteLine("*Note* This tool is based around Coppi's mod player underground check and modified for ServerTools and automation.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Voting\" Enable=\"False\" Your_Voting_Site=\"https://7daystodie-servers.com/server/70267\" API_Key=\"iYNqIvdhDBh8DZDrnw96GanL69aN2OKZIB\" Delay_Between_Rewards=\"24\" Reward_Count=\"3\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set your server https address value for Your_Voting_Site. This will match your registered server at https://7daystodie-servers.com");
                sw.WriteLine("Set your server API_Key value found at https://7daystodie-servers.com for API_Key");
                sw.WriteLine("Set a numeric value for Delay_Between_Rewards");
                sw.WriteLine("Set a numeric value for Reward_Count");
                sw.WriteLine("Set True or False for Reward_Entity");
                sw.WriteLine("Set a numeric value for Entity_Id");
                sw.WriteLine();
                sw.WriteLine("Enabling allows players to use chat command /reward after voting at https://7daystodie-servers.com for your server.");
                sw.WriteLine("If a player has not voted, they will be told to vote at YourVotingSite value.");
                sw.WriteLine("The APIKey is attached to your registered server listed in your server details at https://7daystodie-servers.com");
                sw.WriteLine("DelayBetweenRewards controls how many hours a player must wait before being able to vote and receive a reward for voting.");
                sw.WriteLine("Reward count controls how many items a player will receive from the VoteRewards.xml each time they use /reward.");
                sw.WriteLine("Reward count does not control how many of a particular item you will receive, it controls how many entries from the VoteRewards.xml a player will receive.");
                sw.WriteLine("Setting Reward_Entity to true will nut use the VoteReward.xml. Instead it will spawn a single entity based on the Entity_Id.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("< Tool Name =\"Wallet\" Negative_Wallet=\"False\" Coin_Name=\"Coins\" Zombie_Kill_Value=\"10\" Player_Kill_Value=\"50\" Death_Penalty_Value=\"-25\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Negative_Wallet");
                sw.WriteLine("Set a value of your choice for Coin_Name");
                sw.WriteLine("Set a numeric value for Zombie_Kill_Value");
                sw.WriteLine("Set a numeric value for Player_Kill_Value");
                sw.WriteLine("Set a numeric value for Death_Penalty_Value");
                sw.WriteLine();
                sw.WriteLine("Negative_Wallet controls whether the player can go into a negative in their wallet.");
                sw.WriteLine("Coin_Name is what you would like the server currency in your wallet to be called.");
                sw.WriteLine("The wallet is calculated as follows: PvE = zombie kills + deaths + spent coins.");
                sw.WriteLine("The wallet is calculated as follows: PvP = zombie kills + player kills + deaths + spent coins.");
                sw.WriteLine("Set any values you want for zombie/player kills and deaths.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Watchlist\" Enable=\"False\" Vote_Delay=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Vote_Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Watchlist.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("All user Id that matches those listed in the watchlist will trigger an ingame alert to all online admins.");
                sw.WriteLine("The delay controls how often online admins are alerted to watchlist players being online. It is in minutes");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Weather_Vote\" Enable=\"False\" Vote_Delay=\"30\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Vote_Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow players to start a vote to change the weather by typing /weather in chat.");
                sw.WriteLine("All players will be alerted to an open weather vote where they can type /clear, /rain, or /snow.");
                sw.WriteLine("The winning weather type will be announced after 30 seconds and set server wide.");
                sw.WriteLine("Vote_Delay controls the time between votes. Time is in minutes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Zone_Protection\" Enable=\"False\" Kill_Enabled=\"False\" Jail_Enabled=\"False\" Kick_Enabled=\"False\" Ban_Enabled=\"False\" Zone_Message=\"False\" Set_Home=\"False\" Days_Before_Log_Deleted=\"5\"  />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for KillMurderer");
                sw.WriteLine("Set True or False for JailEnabled");
                sw.WriteLine("Set True or False for KickEnabled");
                sw.WriteLine("Set True or False for BanEnabled");
                sw.WriteLine("Set True or False for ZoneMessage");
                sw.WriteLine("Set True or False for SetHome");
                sw.WriteLine("Set a numeric value for Days_Before_Log_Deleted");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ZoneProtection.xml in your \"world save folder/ServerTools\"");
                sw.WriteLine("Automatically detects players locations to see if they match those listed in ZoneProtection.xml");
                sw.WriteLine("Players will receive a message alerting them to entering the zone as well as when leaving.");
                sw.WriteLine("This does not stop a player from being able to shoot another depending on the game settings. It will punish any player caught killing another player while protected.");
                sw.WriteLine("It applies to both the killer and victim, if either one are protected, it will be detected.");
                sw.WriteLine("Automatically kills, jails, kicks, or bans the killer depending what is set to true.");
                sw.WriteLine("If jail is enabled, the victim can type /forgive to release the killer from jail.");
                sw.WriteLine("The victim receives a message upon respawn alerting them to type /return. This command brings them back to their death spot.");
                sw.WriteLine("If Zone_Message is false, players will not receive a message upon entering or exiting a protected zone.");
                sw.WriteLine("Set_Home controls whether players can use the chat commands /sethome and /sethome2 inside a protected zone. Setting true allows all players to use those commands.");
                sw.WriteLine("Inside the ZoneProtection.xml, the name will be the name of the protection zone, Corner1 is first corner of the zone, Corner2 is the opposite corner of the zone.");
                sw.WriteLine("Corner1, and corner2 are represented by x, y, z coordinates.");
                sw.WriteLine("Log files will auto delete themselves after a set amount of days. Days_Before_Log_Delete controls the amount of days.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("Console commands");
                sw.WriteLine();
                sw.WriteLine("@Admin");
                sw.WriteLine("Example: @Admin Hey guys, keep an eye open for OC, he is evil");
                sw.WriteLine("Example: @Admin Hey, I will be online soon");
                sw.WriteLine("Sends your message to all online admins. Limited to Admins of tier level 0.");
                sw.WriteLine();
                sw.WriteLine("AdminChatColor or acc");
                sw.WriteLine("Example: acc off");
                sw.WriteLine("Example: acc on");
                sw.WriteLine("Controls the chat color and prefix of an admin. Admins can disable their chat color and prefix to stay hidden or stealthy while playing.");
                sw.WriteLine();
                sw.WriteLine("EntityRemove");
                sw.WriteLine("Example: entityremove 12345");
                sw.WriteLine("Removes an existing entity based on its entity id.");
                sw.WriteLine();
                sw.WriteLine("GiveBlock or gb");
                sw.WriteLine("Example: gb 76561191234567891 torch 10");
                sw.WriteLine("Gives a block directly to the player inventory.");
                sw.WriteLine("*Note* This command uses a block of code from Bad Company api manager and has been modified for ServerTools.");
                sw.WriteLine();
                sw.WriteLine("GiveItem or gi");
                sw.WriteLine("Example: gi 76561191234567891 wood 50 1");
                sw.WriteLine("Gives a item directly to the player inventory.");
                sw.WriteLine("*Note* This command uses a block of code from Bad Company api manager and has been modified for ServerTools.");
                sw.WriteLine();
                sw.WriteLine("GiveStartingItmes or gsi");
                sw.WriteLine("Example: gsi 76561191234567891");
                sw.WriteLine("Gives all starting items from the StartingItems.xml to the player and sets a new save point.");
                sw.WriteLine();
                sw.WriteLine("Jail");
                sw.WriteLine("Example: jail add 76561191234567891");
                sw.WriteLine("Example: jail list");
                sw.WriteLine("Sends the player to jail. They will not pass go or collect $200 dollars.");
                sw.WriteLine();
                sw.WriteLine("Maxping");
                sw.WriteLine("Example: maxping 250");
                sw.WriteLine("Sets the maximum ping a player can have.");
                sw.WriteLine();
                sw.WriteLine("Mute");
                sw.WriteLine("Example: mute add 76561191234567891");
                sw.WriteLine("Mutes the player from talking in public chat.");
                sw.WriteLine();
                sw.WriteLine("Shutdown");
                sw.WriteLine("Example: shutdown check");
                sw.WriteLine("Returns the remaining time before the next scheduled shutdown.");
                sw.WriteLine();
                sw.WriteLine("PingImmunity");
                sw.WriteLine("Example: pingimmunity add 76561191234567891");
                sw.WriteLine("Example: pingimmunity remove 76561191234567891");
                sw.WriteLine("Adds the player to the PingImmunity.xml file. Players on this list are not booted for having too high a ping result.");
                sw.WriteLine();
                sw.WriteLine("ReservedSlots");
                sw.WriteLine("Example: reservedslots add 76561191234567891");
                sw.WriteLine("Example: rs remove 76561191234567891");
                sw.WriteLine("Adds the player to the ReservedSlots.xml file. Players on this list are not booted when the server is full and reserved slots are enabled.");
                sw.WriteLine();
                sw.WriteLine("AnimalTracking");
                sw.WriteLine("Example: animaltracking reset 76561191234567891");
                sw.WriteLine("Resets the delay on the command animal tracking for the player.");
                sw.WriteLine();
                sw.WriteLine("FirstClaimBlock");
                sw.WriteLine("Example: firstclaimblock reset 76561191234567891");
                sw.WriteLine("Resets the delay on the command first claim block for the player.");
                sw.WriteLine();
                sw.WriteLine("Gimme");
                sw.WriteLine("Example: gimme reset 76561191234567891");
                sw.WriteLine("Resets the delay on the command gimme for the player.");
                sw.WriteLine();
                sw.WriteLine("Home");
                sw.WriteLine("Example: home reset 76561191234567891");
                sw.WriteLine("Resets the delay on the command home and home2 for the player.");
                sw.WriteLine();
                sw.WriteLine("Reset Player Profile");
                sw.WriteLine("Example: player reset 76561191234567891");
                sw.WriteLine("Resets the profile for the player.");
                sw.WriteLine();
                sw.WriteLine("SpawnEntityInRadius");
                sw.WriteLine("Example: ser 76561191234567891 30 @ 62 63 64");
                sw.WriteLine("Example: ser 171 30 @ 62 63 64");
                sw.WriteLine("Spawns a list of entity in a radius around the player.");
                sw.WriteLine();
                sw.WriteLine("StopServer");
                sw.WriteLine("Example: stopserver 5");
                sw.WriteLine("Example: stopserver cancel");
                sw.WriteLine("Stops the server with a count down timer based on the minutes you choose.");
                sw.WriteLine();
                sw.WriteLine("Scheck");
                sw.WriteLine("Example: scheck");
                sw.WriteLine("Shows the time left before the next auto shutdown.");
                sw.WriteLine();
                sw.WriteLine("TempBan");
                sw.WriteLine("Example: tempban 12341 30");
                sw.WriteLine("Bans the player based their entity id for small amount of time. Maximum temp ban time is 60 minutes.");
                sw.WriteLine();
                sw.WriteLine("VoteReward");
                sw.WriteLine("Example: votereward reset 76561191234567891");
                sw.WriteLine("Example: vr reset 171");
                sw.WriteLine("Resets the delay on the command reward for the player.");
                sw.WriteLine();               
                sw.WriteLine("WatchList");
                sw.WriteLine("Example: watchlist add 76561191234567891");
                sw.WriteLine("Example: watchlist remove 76561191234567891");
                sw.WriteLine("Adds a player to the watchlist.");
                sw.WriteLine();
                sw.WriteLine("Wallet");
                sw.WriteLine("Example: wallet <steamId/entityId> <value>");
                sw.WriteLine("Example: wallet 171 50");
                sw.WriteLine("Example: wallet 76561191234567891 -50");
                sw.WriteLine("Adds or subtracts from a players wallet.");
                sw.WriteLine();
                sw.WriteLine("WeatherVote");
                sw.WriteLine("Example: weathervote reset");
                sw.WriteLine("Resets the delay on the weather vote for the server.");
                sw.WriteLine();
                sw.Flush();
                sw.Close();
            }
        }
    }
}
