using System.IO;
using System.Text;

namespace ServerTools
{
    class HowToSetup
    {
        private const string file = "HowToSetup.txt";
        private static string filePath = string.Format("{0}/{1}", API.ConfigPath, file);

        public static void Load()
        {
            using (StreamWriter sw = new StreamWriter(filePath, false, Encoding.UTF8))
            {
                sw.WriteLine("ServerTools - How to setup ServerTools");
                sw.WriteLine("This was drafted for version 20.6.10");
                sw.WriteLine();
                sw.WriteLine("If you find mistakes or the file is out of date, let the dev team know.");
                sw.WriteLine();
                sw.WriteLine("ServerTools was coded and tested under a Windows operating system. If you find bugs, report them to");
                sw.WriteLine("https://github.com/dmustanger/7dtd-ServerTools/issues");
                sw.WriteLine();
                sw.WriteLine("You can also report bugs at the main Discord guild for ServerTools. This is the invitation link https://discord.gg/6G8VZQg");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("Installation:");
                sw.WriteLine();
                sw.WriteLine("Download and extract the contents of the latest release which will be packaged as a .zip file.");
                sw.WriteLine("Copy the Mods folder you extracted from the.zip to your user data folder. If you have not specified a custom location, it should be located under your app data folder.");
                sw.WriteLine("Alternatively you can place the installation files inside your main dedicated server. It must remain inside the Mods folder.");
                sw.WriteLine("If this Mods folder already exists, you can take the ServerTools folder found inside of the Mods folder from the latest release and place it inside of your existing Mods directory.");
                sw.WriteLine("Double check any new files were copied over properly. Some hosts do not allow .dll files to be transferred without permission.");
                sw.WriteLine();
                sw.WriteLine("Start the server as you normally would.");
                sw.WriteLine();
                sw.WriteLine("The mod will auto create or update the basic XML files required in a folder named ServerTools.");
                sw.WriteLine("Various logs will be placed inside of this folder.");
                sw.WriteLine("The folder will be located in the user data folder / app data folder depending which you are using.");
                sw.WriteLine();
                sw.WriteLine("You will need to enable and set each tools options to match your server preferences.");
                sw.WriteLine("Changes to the ServerToolsConfig.xml file are live and typically do not require the server to be restarted.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("**********************");
                sw.WriteLine();
                sw.WriteLine("TOOL LIST");
                sw.WriteLine();
                sw.WriteLine("Admin_Chat_Commands");
                sw.WriteLine("Admin_List");
                sw.WriteLine("Allocs_Map");
                sw.WriteLine("Ally_Balancer");
                sw.WriteLine("Animal_Tracking");
                sw.WriteLine("Auction");
                sw.WriteLine("Auto_Backup");
                sw.WriteLine("Auto_Party_Invite");
                sw.WriteLine("Auto_Restart");
                sw.WriteLine("Auto_Save_World");
                sw.WriteLine("Bad_Word_Filter");
                sw.WriteLine("Bank");
                sw.WriteLine("Bed");
                sw.WriteLine("Big_Head");
                sw.WriteLine("Block_Logger");
                sw.WriteLine("Block_Pickup");
                sw.WriteLine("Blood_Moans");
                sw.WriteLine("Bloodmoon");
                sw.WriteLine("Bloodmoon_Warrior");
                sw.WriteLine("Bot_Response");
                sw.WriteLine("Bounties");
                sw.WriteLine("Break_Reminder");
                sw.WriteLine("Chat_Color");
                sw.WriteLine("Chat_Command_Log");
                sw.WriteLine("Chat_Command_Response");
                sw.WriteLine("Chat_Flood_Protection");
                sw.WriteLine("Chat_Logger");
                sw.WriteLine("Clan_Manager");
                sw.WriteLine("Clean_Bin");
                sw.WriteLine("Confetti");
                sw.WriteLine("Console_Command_Log");
                sw.WriteLine("Custom_Commands");
                sw.WriteLine("Damage_Detector");
                sw.WriteLine("Day7");
                sw.WriteLine("Died");
                sw.WriteLine("Discord_Bot");
                sw.WriteLine("Discord_Link");
                sw.WriteLine("Donation_Link");
                sw.WriteLine("Dropped_Bag_Protection");
                sw.WriteLine("Dupe_Log");
                sw.WriteLine("Entity_Cleanup");
                sw.WriteLine("Exit_Command");
                sw.WriteLine("Falling_Blocks_Remover");
                sw.WriteLine("First_Claim_Block");
                sw.WriteLine("Flying_Detector");
                sw.WriteLine("FPS");
                sw.WriteLine("Friend_Teleport");
                sw.WriteLine("Gamble");
                sw.WriteLine("Gimme");
                sw.WriteLine("Godmode_Detector");
                sw.WriteLine("Hardcore");
                sw.WriteLine("High_Ping_Kicker");
                sw.WriteLine("Homes");
                sw.WriteLine("Hordes");
                sw.WriteLine("Infinite_Ammo");
                sw.WriteLine("Info_Ticker");
                sw.WriteLine("Invalid_Items");
                sw.WriteLine("Invalid_Item_Stack");
                sw.WriteLine("Jail");
                sw.WriteLine("Kick_Vote");
                sw.WriteLine("Kill_Notice");
                sw.WriteLine("Land_Claim_Count");
                sw.WriteLine("Level_Up");
                sw.WriteLine("Lobby");
                sw.WriteLine("Location");
                sw.WriteLine("Login_Notice");
                sw.WriteLine("Logs");
                sw.WriteLine("Lottery");
                sw.WriteLine("Magic_Bullet_Detector");
                sw.WriteLine("Market");
                sw.WriteLine("Message_Color");
                sw.WriteLine("Motd");
                sw.WriteLine("Mute");
                sw.WriteLine("Mute_Vote");
                sw.WriteLine("Net_Package_Detector");
                sw.WriteLine("New_Player");
                sw.WriteLine("New_Player_Protection");
                sw.WriteLine("New_Spawn_Tele");
                sw.WriteLine("Night_Alert");
                sw.WriteLine("No_Vehicle_Pickup");
                sw.WriteLine("Normal_Player_Color_Prefix");
                sw.WriteLine("Player_List");
                sw.WriteLine("Player_Logs");
                sw.WriteLine("Player_Stats");
                sw.WriteLine("POI_Protection");
                sw.WriteLine("Poll");
                sw.WriteLine("Prayer");
                sw.WriteLine("Private_Message");
                sw.WriteLine("Protected_Zones");
                sw.WriteLine("Public_Waypoints");
                sw.WriteLine("PvE_Violations");
                sw.WriteLine("Real_World_Time");
                sw.WriteLine("Region_Reset");
                sw.WriteLine("Report");
                sw.WriteLine("Reserved_Slots");
                sw.WriteLine("Restart_Vote");
                sw.WriteLine("Scout_Player");
                sw.WriteLine("Shop");
                sw.WriteLine("Shutdown");
                sw.WriteLine("Sleeper_Respawn");
                sw.WriteLine("Spectator_Detector");
                sw.WriteLine("Speed_Detector");
                sw.WriteLine("Starting_Items");
                sw.WriteLine("Stuck");
                sw.WriteLine("Suicide");
                sw.WriteLine("Tracking");
                sw.WriteLine("Travel");
                sw.WriteLine("Vault");
                sw.WriteLine("Vehicle_Recall");
                sw.WriteLine("Voting");
                sw.WriteLine("Wall");
                sw.WriteLine("Wallet");
                sw.WriteLine("Watch_List");
                sw.WriteLine("Waypoints");
                sw.WriteLine("Web_API");
                sw.WriteLine("Web_Panel");
                sw.WriteLine("Workstation_Lock");
                sw.WriteLine("World_Radius");
                sw.WriteLine("XRay_Detector");
                sw.WriteLine("Zones");
                sw.WriteLine();
                sw.WriteLine("**********************");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_Chat_Commands\" />");
                sw.WriteLine("<Tool Name=\"Admin_Chat_Commands\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Adminstrators can use chat to send administrators a ingame chat message. Type @admins (message) to use. Only online administrators will receive the message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_List\" />");
                sw.WriteLine("<Tool Name=\"Admin_List\" Enable=\"False\" Admin_Level=\"0\" Moderator_Level=\"1\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Mod_Level");
                sw.WriteLine();
                sw.WriteLine("Type /admins or !admins in chat to get a response showing the currently online administrators and moderators based on the ServerAdmin.xml. Setting Admin_Level to 2 would show all online administrators");
                sw.WriteLine("tier 0-2 as admin in the chat response. Setting Mod_Level to 6 would show all online moderators tier 3 through 6 as mods in the chat response.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Allocs_Map\" />");
                sw.WriteLine("<Tool Name=\"Allocs_Map\" Enable=\"False\" Link=\"http://0.0.0.0:8082\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set your desired web address to locate the map");
                sw.WriteLine();
                sw.WriteLine("Enables a new window and chat command.");
                sw.WriteLine("Typing /map in chat will open a window with a clickable link. The link is directed towards Allocs online map");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Ally_Balancer\" />");
                sw.WriteLine("<Tool Name=\"Ally_Balancer\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Applies a hidden buff to all players. While within range of other allies, they will do less damage. This is meant to force players to work together and balance large teams");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Animal_Tracking\" />");
                sw.WriteLine("<Tool Name=\"Animal_Tracking\" Enable=\"False\" Delay_Between_Uses=\"60\" Minimum_Spawn_Radius=\"40\" Maximum_Spawn_Radius=\"60\" Animal_Ids=\"85,86,87,88\" />");
                sw.WriteLine("<Tool Name=\"Animal_Tracking_Extended\" Command_Cost=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Minimum_Spawn_Radius");
                sw.WriteLine("Set a numeric value for Maximum_Spawn_Radius");
                sw.WriteLine("Set numeric values for Animal_Ids");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Type /animaltracking or /track in chat to get a animal to spawn with in the radius set.");
                sw.WriteLine("Set the animal id based on the entity id list found in game. Type spawnentity or se in console to view them. Choose any id you wish.");
                sw.WriteLine("The delay is the time that must pass before the command can be used again. The delay is in minutes.");
                sw.WriteLine("Players will receive an in game message saying they have tracked down an animal to with in the radius it spawned at.");
                sw.WriteLine("Experiment with the radius to find one that suits your preference.");
                sw.WriteLine("Command_Cost controls how much the command will cost players to use.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auction\" />");
                sw.WriteLine("<Tool Name=\"Auction\" Enable=\"False\" No_Admins=\"False\" Admin_Level=\"0\" Total_Items=\"1\" Tax=\"0\" />");
                sw.WriteLine("<Tool Name=\"Auction_Extended\" Panel=\"False\" Panel_Name=\"Awesome Auction\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for No_Admins");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Total_Items");
                sw.WriteLine("Set a numeric value for Tax");
                sw.WriteLine("Set True or False for Panel");
                sw.WriteLine("Set the name you would to show for the Auction while in the panel");
                sw.WriteLine();
                sw.WriteLine("Players can sell items by putting it into the first slot of a secure chest they own and typing /auction sell #. The number is how much the price is.");
                sw.WriteLine("Typing /auction shows available items in the auction. /auction buy # will attempt to purchase the corresponding item # from the auction.");
                sw.WriteLine("Profits are sent to the sellers wallet.");
                sw.WriteLine("A player can cancel their auction by typing /auction cancel but it must have been longer than the cancel time.");
                sw.WriteLine("Total_Items controls how many items they may have in the auction");
                sw.WriteLine("Tax controls the perfect removed from sale for taxes.");
                sw.WriteLine("Enabling the panel while the web api is active will allow an interactive browser based window for auction exchange.");
                sw.WriteLine("Panel_Name controls the name shown for the Auction when a player enters the Auction panel.");
                sw.WriteLine("Changing your Web_API port will automatically update the link in your xpath documents for the panel but requires a server restart to take full effect.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Backup\" />");
                sw.WriteLine("<Tool Name=\"Auto_Backup\" Enable=\"False\" Delay_Between_Saves=\"240\" Compression_Level=\"0\" Backup_Count=\"5\" />");
                sw.WriteLine("<Tool Name=\"Auto_Backup_Extended\" Destination=\"\" Save_Directory=\"\"  />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Time_Between_Saves");
                sw.WriteLine("Set your desired location for Destination");
                sw.WriteLine("Set your desired location for Save_Directory");
                sw.WriteLine("Set a numeric value for Compression_Level");
                sw.WriteLine("Set a numeric value for Backup_Count");
                sw.WriteLine();
                sw.WriteLine("An automatic backup of the world files will be created in a zip file.");
                sw.WriteLine("Time_Between_Saves controls how many minutes will pass between backups.");
                sw.WriteLine("You can allow the default location or specify a destination you would like your backups to go to with Destination.");
                sw.WriteLine("You can allow the default location or specify a folder you want to backup with Save_Directory. It must contain the file main.ttw in one its folders");
                sw.WriteLine("Be careful to put the entire location if inputting a custom one. Example C:/MyFiles/7DaysBackups/");
                sw.WriteLine("Set the compression level from 0-9. 0 is none, 9 is maximum.");
                sw.WriteLine("Backup_Count controls how many backups it will keep in total.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Party_Invite\" />");
                sw.WriteLine("<Tool Name=\"Auto_Party_Invite\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Allows a player to make a list of other players in game using entity id.");
                sw.WriteLine("It is recommended that you enable Player_List tool so players can view a list of other players entity id.");
                sw.WriteLine("If a player on this list joins the game while the list creator is the leader of a group that is not full or they are not in a group, it will auto invite the joining player.");
                sw.WriteLine("Both players must be friends for the invitation to be sent.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Restart\" />");
                sw.WriteLine("<Tool Name=\"Auto_Restart\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("The server will attempt to restart itself upon being shutdown.");
                sw.WriteLine("This can cause issues with some hosts, especially when they have their own auto restart function.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Save_World\" />");
                sw.WriteLine("<Tool Name=\"Auto_Save_World\" Enable=\"False\" Delay_Between_Saves=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically begins a timer on world start that will start a world save every time the Delay_Between_Saves expires.");
                sw.WriteLine("This timer and save process will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bad_Word_Filter\" />");
                sw.WriteLine("<Tool Name=\"Bad_Word_Filter\" Enable=\"False\" Invalid_Name=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Invalid_Name");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a BadWords.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("Filters out bad words or symbols from chat matching the list in BadWords.xml.");
                sw.WriteLine("Enabling Invalid_Name will block users from using chat if their name contains a word or symbol from the BadWords.xml.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bank\" />");
                sw.WriteLine("<Tool Name=\"Bank\" Enable=\"False\" Inside_Claim=\"False\" Deposit_Fee_Percent=\"5\" Player_Transfers=\"False\" Direct_Deposit=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Claim");
                sw.WriteLine("Set a numeric value for Deposit_Fee_Percent");
                sw.WriteLine("Set True or False for Player_Transfers");
                sw.WriteLine();
                sw.WriteLine("Inside_Claim controls whether players must be inside their own claim to use the bank commands.");
                sw.WriteLine("The bank will use the same currency as the Wallet. It defaults to the casinoCoin but this can be changed via the ServerToolsConfig.xml Wallet option named Item_Name.");
                sw.WriteLine("Deposit_Fee controls how much is withdrawn from a deposit to the bank. Withdraw has no fee. Set 0 for none.");
                sw.WriteLine("Players can type /bank to see their bank value.");
                sw.WriteLine("Transferring from the Wallet to the Bank will take currency from the players bag.");
                sw.WriteLine("/deposit # takes from the player's bag and adds it to their bank.");
                sw.WriteLine("/withdraw # takes from the player's bank and adds it to their bag/inventory.");
                sw.WriteLine("Turn on and off player transfer to allow players to transfer between bank accounts.");
                sw.WriteLine("While transfer is enabled, players will see their transfer ID when they type /bank.");
                sw.WriteLine("They can give this transfer ID to another player so that someone can transfer funds to it using chat command /transfer ID amount.");
                sw.WriteLine("Example: /transfer 1379 5000.");
                sw.WriteLine("Direct deposit will take currency normally sent to the players inventory and put it in their bank instead.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bed\" />");
                sw.WriteLine("<Tool Name=\"Bed\" Enable=\"False\" Delay_Between_Uses=\"60\" Command_Cost=\"10\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Players can type /bed to teleport to their active bed position.");
                sw.WriteLine("Delay_Between_Uses controls how long the player must wait before using the command in minutes.");
                sw.WriteLine("Command_Cost controls how much the command will cost players to use.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Big_Head\" />");
                sw.WriteLine("<Tool Name=\"Big_Head\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("All zombies will have big heads.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Block_Logger\" />");
                sw.WriteLine("<Tool Name=\"Block_Logger\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs the placement of all blocks in the world, by whom and where");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Block_Pickup\" />");
                sw.WriteLine("<Tool Name=\"Block_Pickup\" Enable=\"False\" Admin_Only=\"False\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Admin_Only");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enable or disable via chat command /pickup.");
                sw.WriteLine("While enabled, a player can punch a block inside their own claimed space to pick it up.");
                sw.WriteLine("This will only work inside of their own claimed space, not an allies.");
                sw.WriteLine("Admin_Only will lock the tool to only admins.");
                sw.WriteLine("Admin_Level controls the level an admin must be to allow block pick with no limitations. The tool is still enabled the same way using chat command /pickup.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Blood_Moans\" />");
                sw.WriteLine("<Tool Name=\"Blood_Moans\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("While enabled, the server will pick random sounds to play for players during the bloodmoon.");
                sw.WriteLine("This will trigger every twenty to thirty seconds but only inside the player's head.");
                sw.WriteLine("They can hear zombie groans and moans, doors opening, glass breaking, rumbles, corpse harvesting, vomit and leg breaks.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bloodmoon\" />");
                sw.WriteLine("<Tool Name=\"Bloodmoon\" Enable=\"False\" Delay=\"60\" Show_On_Respawn=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine("Set True or False for Auto_Show");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Displays the amount of days before the next bloodmoon in chat.");
                sw.WriteLine("Typing /bloodmoon in chat will respond with the remaining days until the next bloodmoon.");
                sw.WriteLine("If the tool is on, it will always display upon entry to the server.");
                sw.WriteLine("Setting Show_On_Respawn will display the remaining days to a player that has died and respawn.");
                sw.WriteLine("Auto_Show will enable it to display periodically in chat while playing.");
                sw.WriteLine("Delay is the time between chat reminders based if Auto_Show is enabled. Time is in minutes");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bloodmoon_Warrior\" />");
                sw.WriteLine("<Tool Name=\"Bloodmoon_Warrior\" Enable=\"False\" Zombie_Kills=\"10\" Chance=\"50\" Reduce_Death_Count=\"False\" Reward_Count=\"1\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Zombie_Kills");
                sw.WriteLine("Set a numeric value for Chance");
                sw.WriteLine("Set True or False for Reduce_Death_Count");
                sw.WriteLine("Set a numeric value for Reward_Count");
                sw.WriteLine();
                sw.WriteLine("Players online during the start of the bloodmoon may randomly be invited to an event.");
                sw.WriteLine("They must survive the entire bloodmoon, can not die and must kill enough zombies.");
                sw.WriteLine("Set home many zombies they must kill to succeed.");
                sw.WriteLine("Created an xml file called BloodmoonWarrior.xml.");
                sw.WriteLine("Set the potential items players can be rewarded by adding or removing them from BloodmoonWarrior.xml.");
                sw.WriteLine("If Reduce_Death_Count is set to true, their death count will reduce by one if successful. They will always receive one item from the list.");
                sw.WriteLine("Players can not log out or disconnect during the event or they will fail. There is no penalty for failure.");
                sw.WriteLine("Reward count controls how many items from the list they receive.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bot_Response\" />");
                sw.WriteLine("<Tool Name=\"Bot_Response\" Enable=\"False\" Whisper=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Whisper");
                sw.WriteLine();
                sw.WriteLine("Creates a BotResponse.xml to customize bot responses.");
                sw.WriteLine("Set the message that must be typed in to chat to trigger an auto response from the bot by adding it to the BotResponse.xml.");
                sw.WriteLine("Whisper controls how the response is sent to chat. A private whisper response or the default global response.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bounties\" />");
                sw.WriteLine("<Tool Name=\"Bounties\" Enable=\"False\" Minimum_Bounty=\"5\" Kill_Streak=\"0\" Bonus=\"25\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Minimum_Bounty");
                sw.WriteLine("Set a numeric value for Kill_Streak");
                sw.WriteLine("Set a numeric value for Bonus");
                sw.WriteLine();
                sw.WriteLine("Players can see the online players and their id by using /bounty. It also shows the current bounty on each player.");
                sw.WriteLine("The cost of the bounty is based on what the player inputs in chat and is available in their wallet.");
                sw.WriteLine("Players are awarded the bounty value upon killing the target and a chat message is shown.");
                sw.WriteLine("If a player goes over the Kill_Streak by killing enough players without dying, they automatically receive the bounty value to their value on each kill.");
                sw.WriteLine("If a player is on a kill streak and another player kills them, the killer will receive this bonus value to their wallet.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Break_Reminder\" />");
                sw.WriteLine("<Tool Name=\"Break_Reminder\" Enable=\"False\" Break_Time=\"60\" Message=\"It has been {Time} minutes since the last break reminder.Stretch and get some water.\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Break_Time");
                sw.WriteLine("Set your desired message sent to players");
                sw.WriteLine();
                sw.WriteLine("Players will be reminded every set amount of minutes to take a break.");
                sw.WriteLine("Break_Time is in minutes.");
                sw.WriteLine("Break_Message controls your desired message players receive upon reaching the specified break time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Color\" />");
                sw.WriteLine("<Tool Name=\"Chat_Color\" Enable=\"False\" Rotate=\"False\" Custom_Color=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ChatColor.xml file. Use this define each players html color tags and prefix as desired.");
                sw.WriteLine("The colors must be entered as an HTML color or from the ColorList.xml. Example:[FF0000] or [FF0000],[FFCC00] or Red");
                sw.WriteLine("Expiration date controls when their prefix and color will stop working in chat.");
                sw.WriteLine("Optionally, players can be added via console with the donor commands which adds them to this and the reserved slots list at the same time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Log\" />");
                sw.WriteLine("<Tool Name=\"Chat_Command_Log\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs all chat commands to an external file. Example /gimme.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Response\" />");
                sw.WriteLine("<Tool Name=\"Chat_Command_Response\" Server_Response_Name=\"[FFCC00]ServerTools\" Main_Color=\"[00FF00]\" Chat_Command_Prefix1=\"/\" Chat_Command_Prefix2=\"!\" />");
                sw.WriteLine("<Tool Name=\"Chat_Command_Response_Extended\" Friend_Chat_Color=\"[33CC33]\" Party_Chat_Color=\"[FFCC00]\" Passthrough=\"True\" />");
                sw.WriteLine();
                sw.WriteLine("Set a server response name to Chat_Command_Response");
                sw.WriteLine("Set a color using a html value in brackets for Main_Color");
                sw.WriteLine("Set a symbol ServerTools will use for chat based commands");
                sw.WriteLine("Set a symbol ServerTools will use for chat based commands");
                sw.WriteLine();
                sw.WriteLine("Set a server response name to chat commands and server responses from ServerTools");
                sw.WriteLine("The color all general response messages will display as in chat.");
                sw.WriteLine("Chat_Command_Prefix is the symbol used as a prefix to chat based commands.");
                sw.WriteLine("Chat_Command_Prefix2 is the symbol used as a prefix to chat based commands.");
                sw.WriteLine("*Note* Do not use @ or \\ for a command prefix.");
                sw.WriteLine();
                sw.WriteLine("Set a color using a html value in brackets for Friend_Chat_Color");
                sw.WriteLine("Set a color using a html value in brackets for Party_Chat_Color");
                sw.WriteLine("Set True or False for Passthrough");
                sw.WriteLine();
                sw.WriteLine("The color that all friend chat will show as for their name and prefix.");
                sw.WriteLine("The color that all party chat will show as for their name and prefix.");
                sw.WriteLine("Passthrough controls whether unrecognized commands will pass through the chat for other mods and managers to use.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Flood_Protection\" />");
                sw.WriteLine("<Tool Name=\"Chat_Flood_Protection\" Enable=\"False\" Max_Length=\"250\" Messages_Per_Min=\"8\" Wait_Time=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Length");
                sw.WriteLine("Set a numeric value for Messages_Per_Min");
                sw.WriteLine("Set a numeric value for Wait_Time");
                sw.WriteLine();
                sw.WriteLine("Protect the chat from being flooded from a player's chat spam.");
                sw.WriteLine("Set the maximum amount of characters that can be in a single chat message.");
                sw.WriteLine("Set the maximum amount of message a player can send in a single minute.");
                sw.WriteLine("Set the time a player must wait if they reach the max count per minute. Time is in seconds.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Logger\" />");
                sw.WriteLine("<Tool Name=\"Chat_Logger\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs all chat to a external file.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Clan_Manager\" />");
                sw.WriteLine("<Tool Name=\"Clan_Manager\" Enable=\"False\" Max_Name_Length=\"6\" Private_Chat_Color=\"[00FF00]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a color using a html value in brackets for Private_Chat_Color");
                sw.WriteLine();
                sw.WriteLine("Enables the clan manager. Players can control it via chat.");
                sw.WriteLine("Clan commands are shown in chat based on their availability by typing /clancommands");
                sw.WriteLine("Players can create and manage a clan with these various commands.");
                sw.WriteLine("If a player sends a clan chat, it will use the Private_Chat_Color.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Clean_Bin\" />");
                sw.WriteLine("<Tool Name=\"Clean_Bin\" Enable=\"False\" Auction=\"False\" Bank=\"False\" Bounties=\"False\" Delays=\"False\" />");
                sw.WriteLine("<Tool Name=\"Clean_Bin_Extended1\" Homes=\"False\" Jail=\"False\" Lobby=\"False\" Market=\"False\" New_Spawn_Tele=\"False\" />");
                sw.WriteLine("<Tool Name=\"Clean_Bin_Extended2\" Poll=\"False\" Protected_Zones=\"False\" Vehicles=\"False\" Waypoints=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Auction");
                sw.WriteLine("Set True or False for Bank");
                sw.WriteLine("Set True or False for Bounties");
                sw.WriteLine("Set True or False for Delays");
                sw.WriteLine();
                sw.WriteLine("Enabling will clean the ServerTools.bin file on the next server start and then disable the tool automatically.");
                sw.WriteLine("Each option controls which data is removed from the ServerTools.bin file");
                sw.WriteLine("The options are labeled by the tool name the data corresponds to");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Homes");
                sw.WriteLine("Set True or False for Jail");
                sw.WriteLine("Set True or False for Lobby");
                sw.WriteLine("Set True or False for Market");
                sw.WriteLine("Set True or False for New_Spawn_Tele");
                sw.WriteLine();
                sw.WriteLine("Each option controls which data is removed from the ServerTools.bin file");
                sw.WriteLine("The options are labeled by the tool name the data corresponds to");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Poll");
                sw.WriteLine("Set True or False for Protected_Spaces");
                sw.WriteLine("Set True or False for Vehicles");
                sw.WriteLine("Set True or False for Wallet");
                sw.WriteLine("Set True or False for Waypoints");
                sw.WriteLine();
                sw.WriteLine("Each option controls which data is removed from the ServerTools.bin file");
                sw.WriteLine("The options are labeled by the tool name the data corresponds to");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Confetti\" />");
                sw.WriteLine("<Tool Name=\"Confetti\" Enable=\"False\" Player=\"False\" Zombie=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Player");
                sw.WriteLine("Set True or False for Zombie");
                sw.WriteLine();
                sw.WriteLine("Players or Zombies can be set to launch confetti upon their death.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Console_Command_Log\" />");
                sw.WriteLine("<Tool Name=\"Console_Command_Log\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("All console commands will be logged to its own file");
                sw.WriteLine("This only logs the command, user that has issued it and time. It does not log the response");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Custom_Commands\" />");
                sw.WriteLine("<Tool Name=\"Custom_Commands\" Enable=\"True\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a CustomCommands.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Allows custom commands to be used via chat. Example: The player can type /tpmarket and it runs \"tele {EOS} 0 -1 5\" based on the response the admin has setup.");
                sw.WriteLine("Separate command response with a ^. Example: tele {EntityId} 10 -1 50 ^ whisper You are now in the market.");
                sw.WriteLine("A delay in the operation of the response can be done with {Delay} #. Example: tele {EntityId} 10 -1 50 ^ {Delay} 3 ^ whisper {PlayerName} you are now in the market.");
                sw.WriteLine("Run a permission check on the player using the command by setting it via the xml file to true or false. Users must be the right permission level in the serveradmin.xml");
                sw.WriteLine("Responses in chat can include whisper or global with a message. Whisper will send it to the player that triggers the command. Global will send the message to the entire server.");
                sw.WriteLine("{SetTeleport} 'name' will save the players current location to the specified name. {Teleport} 'name' will teleport the player to the saved location.");
                sw.WriteLine("{RemoveTeleport} 'name' will remove the saved location if it exists. The name does not require ' around it.");
                sw.WriteLine("Bloodmoon option in CustomCommands.xml controls whether the command can be used during a bloodmoon.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Damage_Detector\" />");
                sw.WriteLine("<Tool Name=\"Damage_Detector\" Enable=\"False\" Entity_Damage_Limit=\"1000\" Block_Damage_Limit=\"2000\" Player_Damage_Limit=\"2000\" Admin_Level=\"0\" />");
                sw.WriteLine("<Tool Name=\"Damage_Detector_Extended\" Log=\"False\"  />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Entity_Damage_Limit");
                sw.WriteLine("Set a numeric value for Block_Damage_Limit");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Log");
                sw.WriteLine();
                sw.WriteLine("Watches for damage done to players and blocks.");
                sw.WriteLine("If the damage is too high, they will be banned. Set the max damage a person can commit.");
                sw.WriteLine("Admins will be skipped if they are the right level.");
                sw.WriteLine("Logging of events can be enabled or disabled with Log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Day7\" />");
                sw.WriteLine("<Tool Name=\"Day7\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /day and /day7. Using these will respond with the days left until a horde night as well as the current server FPS, count of mobs, animals,");
                sw.WriteLine("minibikes, and supply crates spawned in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Died\" />");
                sw.WriteLine("<Tool Name=\"Died\" Enable=\"False\" Min_Level=\"0\" Max_Level=\"0\" Time=\"2\" Delay_Between_Uses=\"120\" />");
                sw.WriteLine("<Tool Name=\"Died_Extended\" Command_Cost=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Min_Level");
                sw.WriteLine("Set a numeric value for Max_Level");
                sw.WriteLine("Set a numeric value for Time");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Enables a command for players to return to their death location.");
                sw.WriteLine("Min_Level controls the minimum level a player must be to use the command. Setting 0 will disable this");
                sw.WriteLine("Max_Level controls the maximum level a player must be to use the command. Setting 0 will disable this");
                sw.WriteLine("After a player dies, they have to type /died within the Time you have set. The Time is in minutes.");
                sw.WriteLine("Delay_Between_Uses controls the time a player must wait before being able to use the command again.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Discord_Bot\" />");
                sw.WriteLine("<Tool Name=\"Discord_Bot\" Enable=\"False\" Webhook=\"\" />");
                sw.WriteLine("<Tool Name=\"Discord_Bot_Extended\" Prefix=\"[Discord]\" Prefix_Color=\"[FFFFFF]\" Name_Color=\"[FFFFFF]\" Message_Color=\"[FFFFFF]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value for Webhook");
                sw.WriteLine();
                sw.WriteLine("Enables communications through Discordian discord bot.");
                sw.WriteLine("Requires Web_API be enabled.");
                sw.WriteLine("Webhook must match the Webhook token from Discord. Instructions are provided with the bot.");
                sw.WriteLine("The bot is downloaded separately on Github.");
                sw.WriteLine();
                sw.WriteLine("Set a value for Prefix");
                sw.WriteLine("Set a value for Prefix_Color");
                sw.WriteLine("Set a value for Name_Color");
                sw.WriteLine("Set a value for Message_Color");
                sw.WriteLine();
                sw.WriteLine("Prefix controls the prefix shown in chat from Discord messages.");
                sw.WriteLine("Prefix_Color controls the color of the prefix shown in chat.");
                sw.WriteLine("Name_Color controls the color of the name shown in chat.");
                sw.WriteLine("Message_Color controls the color of the message shown in chat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Discord_Link\" />");
                sw.WriteLine("<Tool Name=\"Discord_Link\" Enable=\"False\" Link=\"http://discord.gg/linkHere\" />");
                sw.WriteLine();
                sw.WriteLine("Lets a player type /discord to show a new window they can click on that opens the steam web browser to the link provided.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Donation_Link\" />");
                sw.WriteLine("<Tool Name=\"Donation_Link\" Enable=\"False\" Link=\"https://SomethingSomething.html\" />");
                sw.WriteLine();
                sw.WriteLine("Lets a player type /donate to show a new window they can click on that opens the steam web browser to the link provided.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Dropped_Bag_Protection\" />");
                sw.WriteLine("<Tool Name=\"Dropped_Bag_Protection\" Enable=\"False\" Friend_Access=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Friend_Acceess");
                sw.WriteLine();
                sw.WriteLine("Enables protection on dropped bags when a player dies. Other players can not open this bag until someone with permission does.");
                sw.WriteLine("Friend_Acceess allows friends of the bag owner to access it.");
                sw.WriteLine("The tool must be enabled to apply. Bags dropped before enabling will not be protected.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Dupe_Log\" />");
                sw.WriteLine("<Tool Name=\"Dupe_Log\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("If a player adds a duplicate item or stack into their inventory, it will be logged for review.");
                sw.WriteLine("This does not guarantee they have duped anything as the tool is not streaming data from the player live.");
                sw.WriteLine("Example: Player buys 5 stacks of concrete blocks from a trader or takes them out of their chest.");
                sw.WriteLine("This will show up in the log because they all appeared together.");
                sw.WriteLine("Creates a file named DuplicateItems.xml. Items in this list will not be logged when found in player's inventory.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Entity_Cleanup\" />");
                sw.WriteLine("<Tool Name=\"Entity_Cleanup\" Enable=\"False\" Falling_Tree=\"False\" Underground=\"False\" Delete_Bicycles=\"True\" Delete_Drones=\"False\" />");
                sw.WriteLine("<Tool Name=\"Entity_Cleanup_Extended\" Delete_MiniBikes=\"True\" Delete_MotorBikes=\"True\" Delete_Jeeps=\"False\" Delete_Gyros=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Falling_Tree");
                sw.WriteLine("Set True or False for Underground");
                sw.WriteLine("Set True or False for Delete_Bicycles");
                sw.WriteLine("Set True or False for Delete_Drones");
                sw.WriteLine();
                sw.WriteLine("If any of these are active, they are triggered every 15 seconds.");
                sw.WriteLine("Blocks will automatically clean up falling blocks.");
                sw.WriteLine("Falling_Tree will automatically clean up a falling tree that gets stuck at 0 health and does not disappear.");
                sw.WriteLine("Entity_Underground will automatically send entities to the surface except falling blocks are removed.");
                sw.WriteLine("Delete_Bicycles will automatically remove a bicycle if found in the world.");
                sw.WriteLine("Delete_Drones will automatically remove a drone if found in the world.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Delete_MiniBikes");
                sw.WriteLine("Set True or False for Delete_MotorBikes");
                sw.WriteLine("Set True or False for Delete_Jeeps");
                sw.WriteLine("Set True or False for Delete_Gyros");
                sw.WriteLine();
                sw.WriteLine("Delete_MiniBikes will automatically remove a minibike if found in the world.");
                sw.WriteLine("Delete_MotorBikes will automatically remove a motor bike if found in the world.");
                sw.WriteLine("Delete_Jeeps will automatically remove a jeep if found in the world.");
                sw.WriteLine("Delete_Gyros will automatically remove a gyro if found in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Exit_Command\" />");
                sw.WriteLine("<Tool Name=\"Exit_Command\" Enable=\"False\" All=\"False\" Belt=\"False\" Bag=\"False\" Equipment=\"False\" />");
                sw.WriteLine("<Tool Name=\"Exit_Command_Extended\" Admin_Level=\"0\" Exit_Time=\"15\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for All");
                sw.WriteLine("Set True or False for Belt");
                sw.WriteLine("Set True or False for Bag");
                sw.WriteLine("Set True or False for Equipment");
                sw.WriteLine();
                sw.WriteLine("Enabling will require players to type /exit to leave the server or else drop things.");
                sw.WriteLine("All will make players drop equipment, backpack and toolbelt.");
                sw.WriteLine("Belt will make a player drop just their toolbelt.");
                sw.WriteLine("Bag will make a player drop just their backpack.");
                sw.WriteLine("Equipment will make a player drop just their equipment.");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Exit_Time");
                sw.WriteLine();
                sw.WriteLine("Admin_Level is the permission level where typing /exit will not count down and exit.");
                sw.WriteLine("Admins do not require typing /exit to leave. No penalty is applied to them.");
                sw.WriteLine("Exit time is the time a player must stand still after running the command before exit.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Falling_Blocks_Remover\" />");
                sw.WriteLine("<Tool Name=\"Falling_Blocks_Remover\" Enable=\"False\" Log=\"False\" Max_Blocks=\"10\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Log");
                sw.WriteLine("Set a numeric value for Max_Blocks");
                sw.WriteLine();
                sw.WriteLine("Attempts to remove all falling blocks in the game for performance improvements.");
                sw.WriteLine("If the log is enabled, it will log the general location of the falling blocks when it goes over the Max_Blocks count. It will also attempt to log the closest player id and name");
                sw.WriteLine("Set the Max_Blocks to control how many blocks must be detected falling at one time for the log to engage. This can be used to detect large collapses.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"First_Claim_Block\" />");
                sw.WriteLine("<Tool Name=\"First_Claim_Block\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /claim to receive a claim block but only once.");
                sw.WriteLine("This is used to help prevent claim block grief with noobs especially on PVP servers.");
                sw.WriteLine("Recommend removing the claim block given to new players by the base game when in use to help prevent lost claims.");
                sw.WriteLine("It will not interfere with the initial item spawn.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Flying_Detector\" />");
                sw.WriteLine("<Tool Name=\"Flying_Detector\" Enable=\"False\" Admin_Level=\"0\" Flags=\"3\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Flying_Detector");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Flags");
                sw.WriteLine();
                sw.WriteLine("Automatically detects players flying in the air or using no collision underground.");
                sw.WriteLine("Players are automatically banned and given the reason detected for flying.");
                sw.WriteLine("Detected players are added to the detection log.");
                sw.WriteLine("Admins are skipped if the right level.");
                sw.WriteLine("Flags controls how many times a player can be flagged as flying in a row before considered detected.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"FPS\" />");
                sw.WriteLine("<Tool Name=\"FPS\" Enable=\"False\" Set_Target=\"60\" Low_FPS=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Set_Target");
                sw.WriteLine("Set a numeric value for Low_FPS");
                sw.WriteLine();
                sw.WriteLine("Players can type /fps to show the fps read out from /day7 command.");
                sw.WriteLine("Set_Target controls the fps target the server will be set to on load up.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Friend_Teleport\" />");
                sw.WriteLine("<Tool Name=\"Friend_Teleport\" Enable=\"False\" Delay_Between_Uses=\"60\" Command_Cost=\"0\" Player_Check=\"False\" Zombie_Check=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Friends can type /friend to see a list of their current online friends and their Id #.");
                sw.WriteLine("/friend # will send a request to teleport to the friend with that Id.");
                sw.WriteLine("The other player will receive the request and can type /accept to verify the request.");
                sw.WriteLine("A request will only last for one minute before a player must make a new request.");
                sw.WriteLine("Command cost controls how much the command will take from the wallet/bank to use the command.");
                sw.WriteLine("Player_Check controls whether the player can be close to another player before using this command.");
                sw.WriteLine("Zombie_Check controls whether the player can be close to a zombie and targeted by them before using this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Gamble\" />");
                sw.WriteLine("<Tool Name=\"Gamble\" Enable=\"False\" Delay_Between_Uses=\"10\" Command_Cost=\"20\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Allows players to gamble Wallet currency using chat commands.");
                sw.WriteLine("It will begin a 50/50 draw with 1 in 2 chance of winning. The player must spend the Command_Cost to enter. If they win, they can collect the winnings or bet again.");
                sw.WriteLine("If the player wins in sequential rounds, the winnings increase but their chance of success decreases.");
                sw.WriteLine("Round 1: 1 in 2 chance. Round 2: 1 in 3. Round 3: 1 in 4. Round 4: 1 in 5, and so on.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Gimme\" />");
                sw.WriteLine("<Tool Name=\"Gimme\" Enable=\"False\" Delay_Between_Uses=\"60\" Zombies=\"False\" Zombie_Id=\"4,9,11\" Command_Cost=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set True or False for Zombies");
                sw.WriteLine("Set a numeric value for Zombie_Id");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Gimme.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("Players can type /gimme to initiate a free item from the gimme list.");
                sw.WriteLine("The gimme.xml contains a list of all the items a player can receive from using /gimme.");
                sw.WriteLine("A delay can be set with Delay_Between_Uses so players must wait that period of time before using /gimme again.");
                sw.WriteLine("Zombies will control whether a zombie can be spawned instead of an item from the list. Chances are 1 in 8.");
                sw.WriteLine("Zombie_Id controls which zombie can potentially be spawned instead of an item.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Godmode_Detector\" />");
                sw.WriteLine("<Tool Name=\"Godmode_Detector\" Enable=\"False\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Starts an automatic check for players using god mode.");
                sw.WriteLine("Set the admin level required to use god mode.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hardcore\" />");
                sw.WriteLine("<Tool Name=\"Hardcore\" Enable=\"False\" Optional=\"True\" Max_Deaths=\"9\" Max_Extra_Lives=\"3\" Life_Price=\"2000\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Optional");
                sw.WriteLine("Set a numeric value for Max_Deaths");
                sw.WriteLine("Set a numeric value for Max_Extra_Lives");
                sw.WriteLine("Set a numeric value for Life_Price");
                sw.WriteLine();
                sw.WriteLine("Be careful enabling this feature.");
                sw.WriteLine("Players have a limited amount of lives. If they run out, their stats are recorded and they are kicked, then their player profile is deleted.");
                sw.WriteLine("Setting optional allows players to type /hardcore on to enable the mode at any point while playing but this can not be reversed.");
                sw.WriteLine("When a player is kicked, they are given their stats and score.");
                sw.WriteLine("When the player joins again, they can check their last stats/score or check the top 3 playtime and top 3 scores on the server.");
                sw.WriteLine("Set Max_Extra_Lives above 0 to allow players to buy lives and how many.");
                sw.WriteLine("Set the Life_Price to purchase a life. The price is multiplied by the amount of lives they have bought.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"High_Ping_Kicker\" />");
                sw.WriteLine("<Tool Name=\"High_Ping_Kicker\" Enable=\"False\" Max_Ping=\"250\" Flags=\"2\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Ping");
                sw.WriteLine("Set a numeric value for Flags");
                sw.WriteLine();
                sw.WriteLine("Players who have too high of a ping will be kicked from the server automatically.");
                sw.WriteLine("Max_Ping is the limit a player can ping at before being flagged for kick.");
                sw.WriteLine("Flags control the amount of times in a row a player must fail the ping check before the auto kick initiates.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Homes\" />");
                sw.WriteLine("<Tool Name=\"Homes\" Enable=\"False\" Max_Homes=\"2\" Reserved_Max_Homes=\"4\" Delay_Between_Uses=\"0\" Command_Cost=\"0\" />");
                sw.WriteLine("<Tool Name=\"Homes_Extended\" Player_Check=\"False\" Zombie_Check=\"False\" Vehicle=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Homes");
                sw.WriteLine("Set a numeric value for Reserved_Max_Homes");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat commands /sethome 'name', /home save 'name', /home, /fhome 'name' and /home del 'name'.");
                sw.WriteLine("/sethome 'name' and /home save 'name' will save the player's current location as the name they specify.");
                sw.WriteLine("/home lists their saved homes.");
                sw.WriteLine("/home 'name' will teleport the player to the specified location.");
                sw.WriteLine("/fhome 'name' will teleport the player and send an invitation to nearby friends to teleport with them.");
                sw.WriteLine("/home del 'name' will delete the specified home location.");
                sw.WriteLine("Delay_Between_Uses controls the delay before a player can use /home and /fhome. This is set in minutes.");
                sw.WriteLine("Command_Cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for Vehicle");
                sw.WriteLine();
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine("Vehicle will check if they are attached to a vehicle and deny the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hordes\" />");
                sw.WriteLine("<Tool Name=\"Hordes\" Enable=\"False\" Players=\"5\" Zombies=\"30\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Players");
                sw.WriteLine("Set a numeric value for Zombies");
                sw.WriteLine();
                sw.WriteLine("Automatically starts a horde every 20 minutes if player count is over 5 and zombie count is less than 30.");
                sw.WriteLine("This will not trigger during a bloodmoon.");
                sw.WriteLine("Players controls how many must be online for the horde to spawn.");
                sw.WriteLine("Zombies are how few zombies can be spawned in the world for the horde to spawn.");
                sw.WriteLine("The horde size will be random from 4-12 zombies.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Info_Ticker\" />");
                sw.WriteLine("<Tool Name=\"Info_Ticker\" Enable=\"False\" Delay=\"60\" Random=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Messages");
                sw.WriteLine("Set True or False for Random");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InfoTicker.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Each entry in InfoTicker.xml is a message that will display in game.");
                sw.WriteLine("Delay_Between_Messages controls the time before the next message is displayed.");
                sw.WriteLine("Setting Random to true will show the messages in a random order until all have been displayed. The list will repeat again but in a new random order.");
                sw.WriteLine("Leaving Random to false will display each message in order of the list until all have been displayed. The list will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Infinite_Ammo\" />");
                sw.WriteLine("<Tool Name=\"Infinite_Ammo\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will try to auto detect players using cheats to gain infinite ammo.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Interactive_Map\" />");
                sw.WriteLine("<Tool Name=\"Interactive_Map\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Typing /imap in game will open a clickable link. The link opens the steam browser to a map of the game world.");
                sw.WriteLine("Requires Allocs Fixes installed to utilize this tool.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Buffs\" />");
                sw.WriteLine("<Tool Name=\"Invalid_Buffs\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InvalidBuffs.xml in your ServerTools folder");
                sw.WriteLine("Each entry in InvalidBuffs.xml is checked against each players active buffs.");
                sw.WriteLine("If an invalid buff is found active, it will be debuffed, noted in the detection log and output log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Items\" />");
                sw.WriteLine("<Tool Name=\"Invalid_Items\" Enable=\"False\" Ban=\"False\" Admin_Level=\"0\" Check_Storage=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Ban");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set True or False for Check_Storage");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InvalidItems.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Each entry in InvalidItems.xml is checked against each players inventory.");
                sw.WriteLine("If any items in a player's inventory match the invalid items list, a message will show in the server alerting everyone. The player is also warned.");
                sw.WriteLine("If Ban is set to true it will ban the player instead of kicking them for their illegal items.");
                sw.WriteLine("Setting a Admin_Level will ignore all admins and mods based on the ServerAdmin.xml level they are set to.");
                sw.WriteLine("Setting Admin_Level to 5 will ignore all admins and mods level 0-5 from the serveradmin.xml permission list.");
                sw.WriteLine("Check_Storage will check inside secure chests for invalid items and remove them every 5 minutes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Item_Stack\" />");
                sw.WriteLine("<Tool Name=\"Invalid_Item_Stack\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically checks players inventory for invalid stack sizes. The player will receive a message telling them they have an invalid stack and a log will be made to the output_log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Jail\" />");
                sw.WriteLine("<Tool Name=\"Jail\" Enable=\"False\" Jail_Size=\"8\" Jail_Position=\"0,0,0\" Jail_Shock=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Jail_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Jail_Position");
                sw.WriteLine("Set True or False for Jail_Shock");
                sw.WriteLine();
                sw.WriteLine("Enables the jail system for naughty players. This must be enabled to utilize other tools that send a player to jail.");
                sw.WriteLine("Console commands can be used to send a player to the jail space.");
                sw.WriteLine("Jail_Size controls how far a player can stray from the jail before it teleports them back to the Jail_Position.");
                sw.WriteLine("Jail_Position controls where a jailed player is sent to. This is the x, y, z position.");
                sw.WriteLine("Jail shock will apply the shock buff to them if they try to leave the prison area.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kick_Vote\" />");
                sw.WriteLine("<Tool Name=\"Kick_Vote\" Enable=\"False\" Players_Online=\"5\" Votes_Needed=\"3\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Players_Online");
                sw.WriteLine("Set True or False for Votes_Needed");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to kick a player from the game.");
                sw.WriteLine("Can only start a vote if 10 or more players and 8 must vote yes.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kill_Notice\" />");
                sw.WriteLine("<Tool Name=\"Kill_Notice\" Enable=\"False\" Player=\"False\" Zombie=\"True\" Animal=\"True\" Show_Level=\"False\" />");
                sw.WriteLine("<Tool Name=\"Kill_Notice_Extended\" Show_Damage=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Player");
                sw.WriteLine("Set True or False for Zombie_Kills");
                sw.WriteLine("Set True or False for Animal_Kills");
                sw.WriteLine("Set True or False for Show_Level");
                sw.WriteLine();
                sw.WriteLine("Shows a chat message with the kill information you have selected.");
                sw.WriteLine("Player shows player vs player.");
                sw.WriteLine("Zombie shows zombie vs player.");
                sw.WriteLine("Animal shows animal vs player.");
                sw.WriteLine("Show_Level controls if the player level is shown.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Show_Damage");
                sw.WriteLine();
                sw.WriteLine("Show_Damage controls if the final damage that killed them is shown in the notice.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Land_Claim_Count\" />");
                sw.WriteLine("<Tool Name=\"Land_Claim_Count\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a LandClaimCount.xml.");
                sw.WriteLine("Put players id in the file with the number of claims.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Level_Up\" />");
                sw.WriteLine("<Tool Name=\"Level_Up\" Enable=\"False\" Xml_Only=\"False\" Announce=\"True\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Xml_Only");
                sw.WriteLine("Set True or False for Announce");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a LevelUp.xml.");
                sw.WriteLine("If enabled, chat will display a message about a player reaching a new level.");
                sw.WriteLine("You can set what will happen when a player reaches specific levels in the xml file.");
                sw.WriteLine("Commands in LevelUp.xml will accept console commands.");
                sw.WriteLine("If Xml_Only is enabled, the only levels that will show a chat notice are the ones listed in the LevelUp.xml.");
                sw.WriteLine("Announce will control if the level up is shown in chat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lobby\" />");
                sw.WriteLine("<Tool Name=\"Lobby\" Enable=\"False\" Return=\"False\" Delay_Between_Uses=\"5\" Lobby_Size=\"25\" Lobby_Position=\"0,0,0\" />");
                sw.WriteLine("<Tool Name=\"Lobby_Extended\" Reserved_Only=\"False\" Command_Cost=\"0\" Player_Check=\"False\" Zombie_Check=\"False\" PvE=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Lobby_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Lobby_Position");
                sw.WriteLine();
                sw.WriteLine("Typing /lobby will send a player to the lobby if the position is set.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using /lobby again.");
                sw.WriteLine("If return is enabled, players are alert upon using /lobby that they can type /return to be sent back to the location they came from.");
                sw.WriteLine("They must be within range of the lobby position based on the Lobby_Size");
                sw.WriteLine("Lobby_Position controls where they will be teleport to when using /lobby.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Reserved_Only");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for PvE");
                sw.WriteLine();
                sw.WriteLine("Reserved only locks the lobby commands to only reserved players");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine("Set PvE to true so they can not damage each other while inside the lobby.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Location\" />");
                sw.WriteLine("<Tool Name=\"Location\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /loc to show their x, y, z coordinates in chat.");
                sw.WriteLine("This is adjusted to match the in game map. The true world location is different in height value. Use console command lp to check true locations.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Login_Notice\" />");
                sw.WriteLine("<Tool Name=\"Login_Notice\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a file named LoginNotice.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("Add players to the xml file along with whatever message of your choice, name and expiry date.");
                sw.WriteLine("If the player matching the listed Id enters the game, the message will be displayed to all players.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Logs\" />");
                sw.WriteLine("<Tool Name=\"Logs\" Days_Before_Log_Delete=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Days_Before_Log_Delete");
                sw.WriteLine();
                sw.WriteLine("Controls how old a log file can be in days before it is automatically deleted from the logs folder.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lottery\" />");
                sw.WriteLine("<Tool Name=\"Lottery\" Enable=\"False\" Time=\"10\" Bonus=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Time");
                sw.WriteLine("Set a numeric value for Bonus");
                sw.WriteLine();
                sw.WriteLine("Players can start a new lottery by typing /lottery #. They can check the current lotto with /lottery.");
                sw.WriteLine("To enter a lottery, players must match what the first player opened the lottery value as.");
                sw.WriteLine("When the time has passed or eight players have entered the lottery, it will draw the winner.");
                sw.WriteLine("Time controls how long the lottery will stay open before drawing a winner.");
                sw.WriteLine("If the lottery is full, the winner also gets the Bonus.");
                sw.WriteLine("If the server begins to shutdown, the winner will be drawn immediately.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Magic_Bullet_Detector\" />");
                sw.WriteLine("<Tool Name=\"Magic_Bullet_Detector\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically detects and bans players detected trying to use a specific type of hack to kill players without shooting them from anywhere on the map.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Market\" />");
                sw.WriteLine("<Tool Name=\"Market\" Enable=\"False\" Return=\"False\" Delay_Between_Uses=\"5\" Market_Size=\"25\" Market_Position=\"0,0,0\" />");
                sw.WriteLine("<Tool Name=\"Market_Extended\" Reserved_Only=\"False\" Command_Cost=\"0\" Player_Check=\"False\" Zombie_Check=\"False\" PvE=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Market_Size");
                sw.WriteLine("Set a numeric value set of x,y,z position for Market_Position");
                sw.WriteLine();
                sw.WriteLine("Typing /market will send a player to the market if the position is set.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using /market again.");
                sw.WriteLine("If return is enabled, players are alert upon using /market that they can type /return to be sent back to the location they came from.");
                sw.WriteLine("They must be within range of the market position based on the Market_Size");
                sw.WriteLine("Market_Position controls where they will be teleport to when using /market.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Reserved_Only");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for PvE");
                sw.WriteLine();
                sw.WriteLine("Reserved only locks the market commands to only donor/reserved players");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine("Set PvE to true so they can not damage each other while inside the market.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Message_Color\" />");
                sw.WriteLine("<Tool Name=\"Message_Color\" Enable=\"False\" Color=\"[FFFFFF]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a color using a html value in brackets for Color");
                sw.WriteLine();
                sw.WriteLine("General chat message color can be controlled with this.");
                sw.WriteLine("The color must be entered as an HTML color. Example:[FF0000]");
                sw.WriteLine("This does not effect their name or add a prefix to it. It only changes the color of the message.");
                sw.WriteLine("Command responses are a different color and controled by a different option.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Motd\" />");
                sw.WriteLine("<Tool Name=\"Motd\" Enable=\"False\" Show_On_Respawn=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Motd.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Message of the day or Motd entries will show to the player upon joining the server.");
                sw.WriteLine("Each entry in the Motd.xml will show as a separate message in game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Mute\" />");
                sw.WriteLine("<Tool Name=\"Mute\" Enable=\"False\" Block_Commands=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the in game mute tool to shut up players that talk too much.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Mute_Vote\" />");
                sw.WriteLine("<Tool Name=\"Mute_Vote\" Enable=\"False\" Players_Online=\"5\" Votes_Needed=\"3\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Players_Online");
                sw.WriteLine("Set a numeric value for Votes_Needed");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to mute a player in game from chat for 60 minutes.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Net_Package_Detector\" />");
                sw.WriteLine("<Tool Name=\"Net_Package_Detector\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically watches for modified packets sent to the server by clients and bans them.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Player\" />");
                sw.WriteLine("<Tool Name=\"New_Player\" Enable=\"False\" Entry_Message=\"*The stench of young flesh bares itself upon the world* ...{PlayerName} has entered the world for the first time.\" />") ;
                sw.WriteLine("<Tool Name=\"New_Player_Extended\" Block_During_Bloodmoon=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Create an entry message for Entry_Message");
                sw.WriteLine();
                sw.WriteLine("New players that join your server will trigger this message to show for everyone.");
                sw.WriteLine("It can contain {PlayerName} if you want their name to display.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Block_During_Bloodmoon");
                sw.WriteLine();
                sw.WriteLine("Block_During_Bloodmoon controls if a new player can join during the bloodmoon.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Player_Protection\" />");
                sw.WriteLine("<Tool Name=\"New_Player_Protection\" Enable=\"False\" Level=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Level");
                sw.WriteLine();
                sw.WriteLine("This will block all PvP damages until the player reaches the desired level.");
                sw.WriteLine("Sets the level required for PvP damages to occur.");
                sw.WriteLine("Players taking zombie and animal damage will receive a small heal until they reach the desired level.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Spawn_Tele\" />");
                sw.WriteLine("<Tool Name=\"New_Spawn_Tele\" Enable=\"False\" New_Spawn_Tele_Position=\"0,0,0\" Return=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for New_Spawn_Tele_Position");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine();
                sw.WriteLine("Teleports a new player upon joining to the New_Spawn_Tele_Position.");
                sw.WriteLine("Set New_Spawn_Tele_Position to control where a new player will spawn to.");
                sw.WriteLine("New_Spawn_Tele_Position is an x, y, z position.");
                sw.WriteLine("Enabling return will alert players upon teleport that they can type /ready to go back to their first spawn point.");
                sw.WriteLine("Players must be with 50 blocks of the new tele spawn to use /ready.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Night_Alert\" />");
                sw.WriteLine("<Tool Name=\"Night_Alert\" Enable=\"False\" Delay=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically show the hours left until night time.");
                sw.WriteLine("Use Delay to control how often it shows.");
                sw.WriteLine("Does not display during night time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"No_Vehicle_Pickup\" />");
                sw.WriteLine("<Tool Name=\"No_Vehicle_Pickup\" Enable=\"False\" Allow_Bicycle=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players will no longer be able to pick up any vehicles when this is enabled.");
                sw.WriteLine("Allow bicycles to be picked up despite No_Vehicle_Pickup being active by setting Allow_Bicycle to true.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Normal_Player_Color_Prefix\" />");
                sw.WriteLine("<Tool Name=\"Normal_Player_Color_Prefix\" Enable=\"False\" Prefix=\"NOOB\" Name_Color=\"[00B3B3]\" Prefix_Color=\"[FFFFFF]\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value of your choice in parenthesis for Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Color");
                sw.WriteLine();
                sw.WriteLine("Enabling makes all standard players chat message show with a prefix and color.");
                sw.WriteLine("Prefix controls the prefix for the message.");
                sw.WriteLine("Color controls the color of the chat message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Oversized_Traps\" />");
                sw.WriteLine("<Tool Name=\"Oversized_Traps\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling this tool requires server restart. If enabled while the server is off, start the server, finish the load process and restart to take affect.");
                sw.WriteLine("Traps and turrets will have an enlarged footprint. The models and collision remain the same. Only the footprint will increase.");
                sw.WriteLine("FootPrints:");
                sw.WriteLine("Dart Trap - 3 x 1 x 3");
                sw.WriteLine("Flame Thrower Trap - 3 x 2 x 4");
                sw.WriteLine("Blade Trap - 5 x 1 x 5");
                sw.WriteLine("Turrets - 3 x 1 x 3");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_List\" />");
                sw.WriteLine("<Tool Name=\"Player_List\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling lets players type /list to see all the current online player names and entity id.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Logs\" />");
                sw.WriteLine("<Tool Name=\"Player_Logs\" Enable=\"False\" Vehicle=\"False\" Interval=\"120\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Interval");
                sw.WriteLine();
                sw.WriteLine("Starts a log that will keep track of multi stats and the player inventory.");
                sw.WriteLine("Setting the Interval will control how often these checks and logs and written to the file.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Stats\" />");
                sw.WriteLine("<Tool Name=\"Player_Stats\" Enable=\"False\" Health=\"255\" Stamina=\"255\" Jump_Strength=\"1.5\" />");
                sw.WriteLine("<Tool Name=\"Player_Stats_Extended\" Height=\"1.8\" Admin_Level=\"0\" Kick_Enabled=\"False\" Ban_Enabled=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Speed");
                sw.WriteLine("Set a numeric value for Health");
                sw.WriteLine("Set a numeric value for Stamina");
                sw.WriteLine("Set a numeric value for Jump_Strength");
                sw.WriteLine();
                sw.WriteLine("Automatically checks if a player has an illegal value for their speed, health, stamina or jump strength.");
                sw.WriteLine("Detected players who fail any of the checks will have a log created.");
                sw.WriteLine("Setting Kick_Enabled to true will kick the detected player.");
                sw.WriteLine("Setting Ban_Enabled to true will ban the detected player.");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Height");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set True or False for Kick_Enabled");
                sw.WriteLine("Set True or False for Ban_Enabled");
                sw.WriteLine();
                sw.WriteLine("Automatically checks if a player has an illegal height value.");
                sw.WriteLine("Ignores checkings admins of this level or lower.");
                sw.WriteLine("Setting Kick_Enabled to true will kick the detected player.");
                sw.WriteLine("Setting Ban_Enabled to true will ban the detected player.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"POI_Protection\" />");
                sw.WriteLine("<Tool Name=\"POI_Protection\" Enable=\"False\" Bed=\"False\" Claim=\"False\" Extra_Distance=\"20\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Bed");
                sw.WriteLine("Set True or False for Claim");
                sw.WriteLine("Set a numeric value for Extra_Distance");
                sw.WriteLine();
                sw.WriteLine("Enable protection from placement of beds and claims on a POI(Place of interest).");
                sw.WriteLine("Set bed, claim or both to true to stop that specific block type from being placed.");
                sw.WriteLine("Extra distance controls how far outside of the POI that is consider as part of the POI.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Poll\" />");
                sw.WriteLine("<Tool Name=\"Poll\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the polling tool for admins to start polls for players to vote on.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Prayer\" />");
                sw.WriteLine("<Tool Name=\"Prayer\" Enable=\"False\" Delay_Between_Uses=\"30\" Command_Cost=\"10\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Players can type /pray to receive a buff from a custom list called Prayer.xml.");
                sw.WriteLine("Set the time delay before players can use this command again. Time is in minutes.");
                sw.WriteLine("Set the cost to use this command with Command_Cost");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Private_Message\" />");
                sw.WriteLine("<Tool Name=\"Private_Message\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can send a private message to each other by using their id or name in chat.");
                sw.WriteLine("Example: /pm 171 Hey buddy, lets meet up.");
                sw.WriteLine("In response, a player can return a message to the last private sender by using /rm.");
                sw.WriteLine("Example: /rm Sounds good. Lets meet by the town in the morning.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Protected_Zones\" />");
                sw.WriteLine("<Tool Name=\"Protected_Zones\" Enable=\"True\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create an xml file named ProtectedZones.xml.");
                sw.WriteLine("Use the console commands while in game to add protection to an area or add zones via the xml");
                sw.WriteLine("Use the console commands while in game to remove protection to an area or remove zones via the xml");
                sw.WriteLine("You can set the area protection to false in the .xml so that you do not have to remove it from the list");
                sw.WriteLine("Use two opposing corner points to designate the protected space. This will form a square or rectangle depending on the locations chosen");
                sw.WriteLine("Protected spaces do not allow for any damage to the blocks nor for anyone to build inside of it including admins.");
                sw.WriteLine("You can list the protected spaces in console.");
                sw.WriteLine("If you find the protection gets stuck, you can use console command st-pz remove. Protection will be removed from the chunk you are standing in only.");
                sw.WriteLine("A chunk is 16 x 16 blocks.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Public_Waypoints\" />");
                sw.WriteLine("<Tool Name=\"Public_Waypoints\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Allows you to setup a list of waypoints that all players can access.");
                sw.WriteLine("A command cost can be set for each waypoint.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"PvE_Violations\" />");
                sw.WriteLine("<Tool Name=\"PvE_Violations\" Jail=\"4\" Kill=\"6\" Kick=\"8\" Ban=\"10\" />");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Jail");
                sw.WriteLine("Set a numeric value for Kill");
                sw.WriteLine("Set a numeric value for Kick");
                sw.WriteLine("Set a numeric value for Ban");
                sw.WriteLine();
                sw.WriteLine("Players that violate PvE Lobby or Market space will be hit with a strike. If they get too many of them, it will apply a penalty.");
                sw.WriteLine("Set how many strikes a player can have before applying the penalties.");
                sw.WriteLine("Setting 0 will not apply the penalty.");
                sw.WriteLine("Jail will send the player to the designated jail space provided it is setup.");
                sw.WriteLine("Kill will kill the player.");
                sw.WriteLine("Kick will kick the player from the server.");
                sw.WriteLine("Ban will ban the player from the server.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Real_World_Time\" />");
                sw.WriteLine("<Tool Name=\"Real_World_Time\" Enable=\"False\" Delay=\"60\" Time_Zone=\"UTC\" Adjustment=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine("Set a string value for Time_Zone");
                sw.WriteLine("Set a numeric value for Adjustment");
                sw.WriteLine();
                sw.WriteLine("Enabling will show the real world time periodically based on the delay.");
                sw.WriteLine("Recommend changing the Time_Zone to match the time zone of the server host location. This will not adjust for the difference.");
                sw.WriteLine("Use adjustment to match the time you prefer as some host are not located in your home country.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Region_Reset\" />");
                sw.WriteLine("<Tool Name=\"Region_Reset\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a RegionReset.xml.");
                sw.WriteLine("Enter the region name and time for reset into the RegionReset.xml.");
                sw.WriteLine("Entries to the file should use the 'r.*.*.7rg' format or '*.*'. The time can be entered as day, week or month />");
                sw.WriteLine("The reset will only occur at the start of the server.");
                sw.WriteLine("The ServerTools.bin keeps a record of when the region resets occur.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Report\" />");
                sw.WriteLine("<Tool Name=\"Report\" Enable=\"False\" Delay_Between_Uses=\"60\" Length=\"150\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Length");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow a player to type /report and their message.");
                sw.WriteLine("The message will be logged in a file called Report.xml under the Reports folder.");
                sw.WriteLine("Admins online at the time of sending, will be sent the message as well.");
                sw.WriteLine("Delay_Between_Uses controls how often a report can be made by a player in minutes.");
                sw.WriteLine("Length is the total length a report is allowed to be.");
                sw.WriteLine("Admin_Level is the level an admin or mod must be to receive the message. Setting 4 would make 0-4 receive it.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Reserved_Slots\" />");
                sw.WriteLine("<Tool Name=\"Reserved_Slots\" Enable=\"False\" Session_Time=\"30\" Admin_Level=\"0\" Reduced_Delay=\"False\" Bonus_Exp=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Session_Time");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Admin_Slots");
                sw.WriteLine("Set True or False for Reduced_Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ReservedSlots.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Turns on an automatic reservation system. When the server is full, it will kick 1 player that is not listed in the ReservedSlots.xml or an admin");
                sw.WriteLine("The auto kick chooses based on the player's overall play session time. Setting zero runs it immediately.");
                sw.WriteLine("If a player is not reserved but also has not played longer than the Session_Time, they will not be kicked, except when set to zero.");
                sw.WriteLine("Admins lower or equal to tier Admin_Level are immune to the kick system. Default is 0. Setting 2 covers 0-2.");
                sw.WriteLine("Admins_Slots keeps one extra slot open for admins to rotate in to the server. A 30 player server will start kicking at 28 players.");
                sw.WriteLine("If Reduced_Delay is set to true, valid players on the list will have a reduced delay after using a relevant chat commands.");
                sw.WriteLine("Players can type /reserved which will respond with the players reservation expiration time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Restart_Vote\" />");
                sw.WriteLine("<Tool Name=\"Restart_Vote\" Enable=\"False\" Players_Online=\"5\" Votes_Needed=\"3\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Players_Online");
                sw.WriteLine("Set True or False for Votes_Needed");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Allows players to vote for a server restart. Initiates stopserver 1 if successful.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine("If an admin of tier Admin_Level is online during a call to vote, they will be alerted and no vote will begin.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Roll_It_Out\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can face each other in a dice game.");
                sw.WriteLine("Requires the Web_API to function.");
                sw.WriteLine("Players must have their steam overlay enabled.");
                sw.WriteLine("Typing /rio will provide a secure id for login and open a clickable link to the game.");
                sw.WriteLine("Instructions on how to play are provided in the game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Scout_Player\" />");
                sw.WriteLine("<Tool Name=\"Scout_Player\" Enable=\"False\" Delay_Between_Uses=\"60\" Command_Cost=\"10\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Players can type /scout to try and locate near by players. It gives no location data but will tell them if a non friend is found with 200 blocks.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using the command again.");
                sw.WriteLine("Command_Cost is the amount required in a players wallet/bank to process the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Shop\" />");
                sw.WriteLine("<Tool Name=\"Shop\" Enable=\"True\" Inside_Market=\"False\" Inside_Traders=\"False\" Panel=\"True\" Panel_Name=\"OC's Shop\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Market");
                sw.WriteLine("Set True or False for Inside_Traders");
                sw.WriteLine("Set True or False for Panel");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat command /shop while anywhere on the map.");
                sw.WriteLine("If you set Inside_Market or Inside_Traders to true, they must be inside one of these to use /shop and /buy.");
                sw.WriteLine("Players can buy an item multiple times from the shop with /buy # #. The second number controls how many times they want to buy it.");
                sw.WriteLine("Admins can customize the Shop.xml however they prefer with any items or blocks from the game.");
                sw.WriteLine("Panel is an interactive web browser based shop interface that uses the Web_API to function.");
                sw.WriteLine("Changing your Web_API port will automatically update the link in your xpath documents for the panel but requires a server restart to take full effect.");
                sw.WriteLine();
                sw.WriteLine("Set a name for Panel_Name");
                sw.WriteLine("The panel name is shown at the top of the interactive shop.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Shutdown\" />");
                sw.WriteLine("<Tool Name=\"Shutdown\" Enable=\"False\" Countdown=\"2\" Time=\"2\" Alert_On_Login=\"False\" Alert_Count=\"2\" />");
                sw.WriteLine("<Tool Name=\"Shutdown_Extended\" UI_Lock=\"False\" Interrupt_Bloodmoon=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Countdown");
                sw.WriteLine("Set a numeric value for Time");
                sw.WriteLine("Set True or False for Alert_On_Login");
                sw.WriteLine("Set a numeric value for Alert_Count");
                sw.WriteLine();
                sw.WriteLine("Automatically begins the shutdown process for the server after the Time runs out or has been met.");
                sw.WriteLine("Begins a warning of the coming shutdown with a timer based on the Countdown after the Time has run out or been met.");
                sw.WriteLine("Saves the world at one minute remaining of the count down and gives the players a warning not to exchange items or build during the final minute.");
                sw.WriteLine("If the server is set as a service on the host hardware, it will automatically restart.");
                sw.WriteLine("Optionally you can enable the Restart tool to attempt restarting the server on shutdown.");
                sw.WriteLine("Alert on login announces the time remaining before the next scheduled shutdown when a player joins the server.");
                sw.WriteLine("Alert_Count controls how many times the alert messages post in chat on each event to help players see it.");
                sw.WriteLine("Bloodmoon nights and events are automatically detected. The shutdown will be extended. When the bloodmoon or event ends, the shutdown process will commence.");
                sw.WriteLine("The Time can be entered as a single interval such as 120 which means the server will begin shutdown after 120 minutes of running time.");
                sw.WriteLine("The Time can be entered as a single time of day such as 03:00 which means the shutdown will begin at 3 am based on the server's time.");
                sw.WriteLine("The Time can be entered as multiple times of day such as 03:00,09:00 which means the shutdown will begin at 3 am and 9 am based on the server's time.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for UI_Lock");
                sw.WriteLine();
                sw.WriteLine("Closes and locks access to all loot, storage, vendor, trader and workstations for the last 45 seconds of the shutdown process.");
                sw.WriteLine("A warning about the lock is given at the one minute remaining mark and when it applies.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Sleeper_Respawn\" />");
                sw.WriteLine("<Tool Name=\"Sleeper_Respawn\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Sleeper spawn points will be reset on server restart.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Spectator_Detector\" />");
                sw.WriteLine("<Tool Name=\"Spectator_Detector\" Enable=\"False\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Automatically detects players using spectator mode without authorization.");
                sw.WriteLine("Admins lower or equal to tier Admin_Level are immune to the spectator check.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Speed_Detector\" />");
                sw.WriteLine("<Tool Name=\"Speed_Detector\" Enable=\"False\" Admin_Level=\"0\" Flags=\"4\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Flags");
                sw.WriteLine();
                sw.WriteLine("Automatically detects players moving at speeds exceeding that of a flying admin.");
                sw.WriteLine("Admins lower or equal to tier Admin_Level are immune to the speed detection.");
                sw.WriteLine("Set the number of flags required to trigger the detection. This helps with lag and latency triggering false positives.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Starting_Items\" />");
                sw.WriteLine("<Tool Name=\"Starting_Items\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a StartingItems.xml in your main installation folder inside the ServerTools folder");
                sw.WriteLine("All items listed in StartingItems.xml will be given to a new player when they first join the server.");
                sw.WriteLine("Use WalletCoin, walletCoin or walletcoin to give a player currency to their wallet.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Stuck\" />");
                sw.WriteLine("<Tool Name=\"Stuck\" Enable=\"False\" Delay_Between_Uses=\"60\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Players can type /stuck to send themselves to the world surface.");
                sw.WriteLine("Can not be used inside other player's claim space.");
                sw.WriteLine("Set the Delay_Between_Uses to control how long a player must wait before stuck will work for them again.");
                sw.WriteLine("This is likely not a viable tool if the Flight tool is operating because they will likely be detected flying if stuck in a wall.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Suicide\" />");
                sw.WriteLine("<Tool Name=\"Suicide\" Enable=\"False\" Delay_Between_Uses=\"60\" Player_Check=\"False\" Zombie_Check=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /killme, /suicide, /wrist and /hang so players can kill themselves.");
                sw.WriteLine("Set the Delay_Between_Uses to control how long a player must wait before suicide will work for them again.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Travel\" />");
                sw.WriteLine("<Tool Name=\"Travel\" Enable=\"False\" Delay_Between_Uses=\"60\" Command_Cost=\"0\" Player_Check=\"False\" Zombie_Check=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a TravelLocations.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("All locations listed in the TravelLocations.xml will allow a player to type /travel while inside one and teleport to the corresponding destination.");
                sw.WriteLine("Inside the TravelLocations.xml, destination is where the player will teleport to.");
                sw.WriteLine("The name will be the name of the travel zone, Corner1 is first corner of the zone, Corner2 is the opposite corner of the zone.");
                sw.WriteLine("Corner1, corner2 and destination are represented by x, y, z coordinates.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Vault\" />");
                sw.WriteLine("<Tool Name=\"Vault\" Inside_Claim=\"False\" Slots=\"4\" Lines=\"1\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Claim");
                sw.WriteLine("Set a numeric value for Slots");
                sw.WriteLine("Set a numeric value for Lines");
                sw.WriteLine();
                sw.WriteLine("Vault is a special tool that allows players to place items in them securely without risk of loss. The items will carry over to new maps.");
                sw.WriteLine("They have limited slots due to how powerful this is. You can adjust the number of slots and lines are available. 48 slots is the maximum. 8 slots, 6 lines, 48 total.");
                sw.WriteLine("Opening a second vault box will contain the same items as the first. This is similar to an Enderchest from Minecraft.");
                sw.WriteLine("Slots controls how many item slots are available in a single line of their vault.");
                sw.WriteLine("Lines controls how many item lines are available total of their vault.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Vehicle_Recall\" />");
                sw.WriteLine("<Tool Name=\"Vehicle_Recall\" Enable=\"False\" Inside_Claim=\"False\" Distance=\"50\" Delay_Between_Uses=\"120\" Command_Cost=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Claim");
                sw.WriteLine("Set a numeric value for Distance");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Inside_Claim controls whether they must be inside their claim space to save the vehicle.");
                sw.WriteLine("Distance controls how far a player can be from their vehicle to use the command. Distance is in blocks");
                sw.WriteLine("Delay_Between_Uses controls how often they can use the command. Delay is in minutes.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("The vehicle list is automatic based on player ownership.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Voting\" />");
                sw.WriteLine("<Tool Name=\"Voting\" Enable=\"False\" Your_Voting_Site=\"https://7daystodie-servers.com/server/12345\" API_Key=\"xxxxxxxx\" Delay_Between_Uses=\"24\" />");
                sw.WriteLine("<Tool Name=\"Voting_Extended\" Reward_Count=\"1\" Reward_Entity=\"False\" Entity_Id=\"73\" Weekly_Votes=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set your server https address value for Your_Voting_Site. This will match your registered server at https://7daystodie-servers.com");
                sw.WriteLine("Set your server API_Key value found at https://7daystodie-servers.com for API_Key");
                sw.WriteLine("Set a numeric value for Delay_Between_Rewards");
                sw.WriteLine();
                sw.WriteLine("Enabling allows players to use chat command /reward after voting at https://7daystodie-servers.com for your server.");
                sw.WriteLine("If a player has not voted, they will be told to vote at YourVotingSite value.");
                sw.WriteLine("The APIKey is attached to your registered server listed in your server details at https://7daystodie-servers.com");
                sw.WriteLine("DelayBetweenRewards controls how many hours a player must wait before being able to vote and receive a reward for voting.");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Reward_Count");
                sw.WriteLine("Set True or False for Reward_Entity");
                sw.WriteLine("Set a numeric value for Entity_Id");
                sw.WriteLine("Set a numeric value for Weekly_Votes");
                sw.WriteLine();
                sw.WriteLine("Reward count controls how many items a player will receive from the VoteRewards.xml each time they use /reward.");
                sw.WriteLine("Reward count does not control how many of a particular item you will receive, it controls how many entries from the VoteRewards.xml a player will receive.");
                sw.WriteLine("Set Reward_Entity to true so that players receive an entity spawned for their reward.");
                sw.WriteLine("Entity_Id controls which entity is spawned as a reward.");
                sw.WriteLine("Weekly_Votes controls how many times a player must vote in 7 days to receive an extra vote reward.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Wall\" />");
                sw.WriteLine("<Tool Name=\"Wall\" Enable=\"False\" Player_Check=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine();
                sw.WriteLine("Enable or disable by using chat command /wall.");
                sw.WriteLine("After enabling, a player can place a block down and if it lines up with another block of the same type to form a wall, it will check near by secure chests for matching blocks and fill the space between them.");
                sw.WriteLine("This will only work inside of their own claims and within ten blocks of the block being placed");
                sw.WriteLine("Player_Check will look for players near by and prevent walls from auto forming.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Wallet\" />");
                sw.WriteLine("<Tool Name=\"Wallet\" Enable=\"True\" PVP=\"False\" Zombie_Kill=\"10\" Player_Kill=\"25\" Bank_Transfers=\"False\" />");
                sw.WriteLine("<Tool Name=\"Wallet_Extended\" Session_Bonus=\"5\" Currency_Name=\"coin\" Item_Name=\"casinoCoin\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for PvP");
                sw.WriteLine("Set a numeric value for Zombie_Kill");
                sw.WriteLine("Set a numeric value for Player_Kill");
                sw.WriteLine("Set True or False for Bank_Transfers");
                sw.WriteLine();
                sw.WriteLine("The Wallet will use the casinoCoin by default but this can be changed via the items.xml provided in the Config folder with the latest release.");
                sw.WriteLine("This file is provided with the installation files.");
                sw.WriteLine("Each kill will reward currency to the player. Set what they are worth in the ServerTools config.");
                sw.WriteLine("Set any values you want for zombie and player kills. If PvP is not set to true, player kills will earn nothing.");
                sw.WriteLine("Bank_Transfers let a player send and receive wallet funds with the bank.");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Session_Bonus");
                sw.WriteLine("Set a value of your choice for Coin_Name");
                sw.WriteLine("Set a value of your choice for Item_Name");
                sw.WriteLine();
                sw.WriteLine("While wallet is enabled, if a player leaves the game and has played over an hour, they will receive the session bonus to their wallet.");
                sw.WriteLine("Coin_Name is what you would like the server currency in your wallet to be called for responses.");
                sw.WriteLine("Item_Name controls the item used for an exchange medium. Changing this requires a server restart to take effect.");
                sw.WriteLine("If you decide to make a new item for currency exchange, add the word currency to the items tags.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Watch_List\" />");
                sw.WriteLine("<Tool Name=\"Watch_List\" Enable=\"False\" Admin_Level=\"0\" Delay=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Watchlist.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("All user Id that matches those listed in the watchlist will trigger an ingame alert to all online admins.");
                sw.WriteLine("Admin_Level controls what level an admin must be to receive the alerts.");
                sw.WriteLine("Delay controls how many minutes between alerts.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Waypoints\" />");
                sw.WriteLine("<Tool Name=\"Waypoints\" Enable=\"False\" Max_Waypoints=\"2\" Reserved_Max_Waypoints=\"4\" Command_Cost=\"0\" Delay_Between_Uses=\"0\" />");
                sw.WriteLine("<Tool Name=\"Waypoints_Extended\" Player_Check=\"False\" Zombie_Check=\"False\" Vehicle=\"False\" No_POI=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Waypoints");
                sw.WriteLine("Set a numeric value for Reserved_Max_Waypoints");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Allows players to save a waypoint for teleport.");
                sw.WriteLine("Players can list their own waypoints, add and delete them freely.");
                sw.WriteLine("Command_Cost is how much it costs to use a waypoint out of their wallet.");
                sw.WriteLine("Set the delay for players to use this command again. Time is in minutes.");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for Vehicle");
                sw.WriteLine();
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough and not targeted from zombies to use this command.");
                sw.WriteLine("Players type /way to list existing. /way 'name' to use that waypoint. /way save 'name' to save where they are standing with that name. /waydel 'name' to remove the existing point.");
                sw.WriteLine("Command options are as follows. Waypoint 'name', way 'name', wp 'name', fwaypoint 'name', fway 'name', fwp 'name', waypoint save 'name', way save 'name', ws 'name', waypoint del 'name', way del 'name', wd 'name'");
                sw.WriteLine("Vehicle controls whether players can be in a vehicle and will stop them from teleporting while set to true.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Web_API\" />");
                sw.WriteLine("<Tool Name=\"Web_API\" Enable=\"True\" Port=\"8084\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value of your choice for Port");
                sw.WriteLine("Set the folder location the game icons can be located at");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow the Web Panel and Discord bot to communicate through the web api.");
                sw.WriteLine("Requires port forwarding. The web api requires an open port to function.");
                sw.WriteLine("Port will control which port the API attempts to open on.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Web_Panel\" />");
                sw.WriteLine("<Tool Name=\"Web_Panel\" Enable=\"True\" Timeout=\"5\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will start the web panel.");
                sw.WriteLine("The web panel requires Web_API be enabled.");
                sw.WriteLine("Set the port you wish the panel to utilize under the Web_API tool. It will be reported in the output log.");
                sw.WriteLine("Access via browser at http://IP:Port/st.html");
                sw.WriteLine("Example: http://123.123.123.123:8084/st.html");
                sw.WriteLine("Allow access to new clients by adding them via console command. A new password will be generated for them.");
                sw.WriteLine("The console command is st-web add userName.");
                sw.WriteLine("Clients can change their password upon successful sign in.");
                sw.WriteLine("Clients can monitor a player list with kick, ban, mute, jail and reward options available.");
                sw.WriteLine("Clients can alter the ServerToolsConfig.xml");
                sw.WriteLine("Clients can run console commands and monitor the output log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Workstation_Lock\" />");
                sw.WriteLine("<Tool Name=\"Workstation_Lock\" Enable=\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can only access a workstation inside of a claimed space if they are the owner or allied with the claim owner.");
                sw.WriteLine("This does not effect admin set at tier 0 permission.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"World_Radius\" />");
                sw.WriteLine("<Tool Name=\"World_Radius\" Enable=\"False\" Normal_Player=\"8000\" Reserved=\"10000\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Normal_Player");
                sw.WriteLine("Set a numeric value for Reserved");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically check player locations vs specified block ranges from center of the map 0,0.");
                sw.WriteLine("Normal_Player is the amount of blocks a player can travel from center before being teleport backwards away from the edge.");
                sw.WriteLine("Reserved is the amount of blocks a reserved player can travel from center before being teleport backwards away from the edge.");
                sw.WriteLine("Admin_Level controls the level required for the tool to skip them and allow travel outside of the block ranges.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"XRay_Detector\" />");
                sw.WriteLine("<Tool Name=\"XRay_Detector\" Enable=\"False\" Admin_Level=\"0\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically check players head location and sets their screen black until it stops colliding with blocks.");
                sw.WriteLine("Admin_Level controls the tier required for the tool to skip specific players and allow them to view inside blocks.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Zones\" />");
                sw.WriteLine("<Tool Name=\"Zones\" Enable=\"True\" Zone_Message=\"True\" Reminder_Delay=\"20\" Set_Home=\"False\"  />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Zone_Message");
                sw.WriteLine("Set a numeric value for Reminder_Delay");
                sw.WriteLine("Set True or False for Set_Home");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Zones.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("Automatically detects players locations to see if they match those listed in Zones.xml.");
                sw.WriteLine("Each zone can set the PvPvE mode which corresponds to the player killing mode.");
                sw.WriteLine("PvPvE: 0 = No Killing, 1 = Kill Allies Only, 2 = Kill Strangers Only, 3 = Kill Everyone");
                sw.WriteLine("If Zone_Message is false, players will not receive a message upon entering or exiting a protected zone.");
                sw.WriteLine("EntryCommand and ExitCommand will run console commands upon entering and exiting the zone.");
                sw.WriteLine("Multiple console commands can be run using ^ to separate them.");
                sw.WriteLine("Reminder notice is the message the player receives if they stay in the same zone long enough. Reminder_Delay control the time.");
                sw.WriteLine("Remove zombies from zones by setting No_Zombie to true.");
                sw.WriteLine("Set_Home controls whether players can set a home inside of zones.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("Console commands");
                sw.WriteLine();
                sw.WriteLine("Type help to get a list of available console commands.");
                sw.WriteLine("Type help 'command name' to get more detailed information about a specific command.");
                sw.WriteLine("Type help * st- to see only ServerTools commands.");
                sw.WriteLine("Typing help * is a search process. You can search for various commands by typing help * commandName.");
                sw.WriteLine();
                sw.WriteLine("Chat commands");
                sw.WriteLine();
                sw.WriteLine("Type /commands in chat to get a list of available chat commands. This will show only commands that are active for the player based on the enabling of the tools.");
                sw.WriteLine();
                sw.WriteLine("CommandList.xml");
                sw.WriteLine();
                sw.WriteLine("You can alter the various chat commands used to trigger tools. The CommandList.xml has the default command and alternate/replacement of your choice. Do not change the default, only the replacement.");
                sw.WriteLine();
                sw.Flush();
                sw.Close();
            }
        }
    }
}
